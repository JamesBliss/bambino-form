{"version":3,"sources":["webpack:///../src/Form/Form.docz.mdx","webpack:///../src/Context/index.js","webpack:///../src/Context/Context.js","webpack:///../src/Form/Form.js","webpack:///../src/useField/useField.js","webpack:///../src/useField/index.js","webpack:///../src/useDefault/useDefault.js","webpack:///../src/useDefault/index.js","webpack:///../src/Input/Input.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","_extends","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_9__","of","Form","__position","__code","__scope","Playground","Props","object","string","Context","Input","_src_Form_Form__WEBPACK_IMPORTED_MODULE_11__","onSubmit","data","alert","JSON","stringify","_src_Input_Input__WEBPACK_IMPORTED_MODULE_13__","name","placeholder","_src_Context_Context__WEBPACK_IMPORTED_MODULE_12__","Consumer","_ref2","handleSubmit","onClick","e","initialValues","first_name","last_name","_ref3","schema","shape","required","_ref4","isMDXComponent","__webpack_exports__","_Context__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","createContext","errors","scopePath","registerField","unregisterField","handleFieldValidation","looptheloop","obj","key","undefined","keyType","result","keys","reduce","r","k","_objectSpread","array","children","fieldDebounced","rest","_React$useState","React","fields","setFields","_React$useState2","setErrors","_React$useState3","initialData","setInitialData","parseForm","parsedDymanicSchema","ref","path","parseValue","dymanicSchema","value","dot","mixed","resetForm","clearValue","_handleDebouncedFieldValidation","_asyncToGenerator","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_15___default","a","mark","_callee","_parseForm","runSchema","remaining","validationErrors","wrap","_context","prev","next","reach","map","_toPropertyKey","t0","message","stop","apply","this","arguments","useDebouncedCallback","_ref5","_x","handleDebouncedFieldValidation","handleValidation","_handleValidation","_callee2","_parseForm2","castData","finalDataSet","_context2","validate","abortEarly","stripUnknown","context","cast","console","merge","arrayMerge","destinationArray","sourceArray","mapArray","index","abrupt","inner","forEach","error","_x2","_handleSubmit","_callee3","_context3","_emotion_core__WEBPACK_IMPORTED_MODULE_17__","_Context__WEBPACK_IMPORTED_MODULE_23__","Provider","field","state","concat","_toConsumableArray","filter","handleResetForm","data-testid","useField","fieldName","_React$useContext","defaultValue","src_useField","useDefault","_ref$path","_useField","current","aria-label","onChange","target","onBlur","src_useDefault_useDefault","InputField","label","multiline","_useDefault","_emotion_core__WEBPACK_IMPORTED_MODULE_9__","react__WEBPACK_IMPORTED_MODULE_10___default","Fragment","className","htmlFor"],"mappings":"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","file":"component---src-form-form-docz-mdx-8a598274ebb7f3d2c89e.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jamesbliss/Sites/@jamesbliss/bambino-form/.docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { object, string } from 'yup';\nimport Form from '../../src/Form/Form';\nimport Context from '../../src/Context/Context';\nimport Input from '../../src/Input/Input';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"form\"\n    }}>{`Form`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<Form />`}</inlineCode>{` component is the most important element of the puzzle, it controls the flow and logic of all that reside within it.`}</p>\n    <p><inlineCode parentName=\"p\">{`<Form />`}</inlineCode>{` is the place you set a parent schema, initial data set and the sumbit fuction.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Form} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<Form onSubmit={data => alert(JSON.stringify(data, null, 2))}>\\n  <Input name=\\\"name\\\" placeholder=\\\"Enter name\\\" />\\n  <br />\\n  {/* This is required because docz doesn\\'t support form submission 🤦‍ */}\\n  <Context.Consumer>\\n    {({ handleSubmit }) => (\\n      <button onClick={e => handleSubmit(e)}>Submit name </button>\\n    )}\\n  </Context.Consumer>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      object,\n      string,\n      Form,\n      Context,\n      Input\n    }} mdxType=\"Playground\">\n  <Form onSubmit={data => alert(JSON.stringify(data, null, 2))} mdxType=\"Form\">\n    <Input name='name' placeholder='Enter name' mdxType=\"Input\" />\n    <br />\n    {\n          /* This is required because docz doesn't support form submission 🤦‍ */\n        }\n    <Context.Consumer>\n      {({\n            handleSubmit\n          }) => <button onClick={e => handleSubmit(e)}>Submit name </button>}\n    </Context.Consumer>\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"initial-values\"\n    }}>{`Initial values`}</h2>\n    <Playground __position={2} __code={'<Form\\n  initialValues={{\\n    first_name: \\'James\\',\\n    last_name: \\'Bliss\\',\\n  }}\\n  onSubmit={data => alert(JSON.stringify(data, null, 2))}\\n>\\n  <Input name=\\\"first_name\\\" placeholder=\\\"Enter first name\\\" />\\n  <br />\\n  <Input name=\\\"last_name\\\" placeholder=\\\"Enter last name\\\" />\\n  <br />\\n  {/* This is required because docz doesn\\'t support form submission 🤦‍ */}\\n  <Context.Consumer>\\n    {({ handleSubmit }) => (\\n      <button onClick={e => handleSubmit(e)}>Submit full name </button>\\n    )}\\n  </Context.Consumer>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      object,\n      string,\n      Form,\n      Context,\n      Input\n    }} mdxType=\"Playground\">\n  <Form initialValues={{\n        first_name: 'James',\n        last_name: 'Bliss'\n      }} onSubmit={data => alert(JSON.stringify(data, null, 2))} mdxType=\"Form\">\n    <Input name='first_name' placeholder='Enter first name' mdxType=\"Input\" />\n    <br />\n    <Input name='last_name' placeholder='Enter last name' mdxType=\"Input\" />\n    <br />\n    {\n          /* This is required because docz doesn't support form submission 🤦‍ */\n        }\n    <Context.Consumer>\n      {({\n            handleSubmit\n          }) => <button onClick={e => handleSubmit(e)}>Submit full name </button>}\n    </Context.Consumer>\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"schema\"\n    }}>{`Schema`}</h2>\n    <Playground __position={3} __code={'<Form\\n  schema={object().shape({\\n    first_name: string().required(\\'First name is required\\'),\\n    last_name: string(),\\n  })}\\n  onSubmit={data => alert(JSON.stringify(data, null, 2))}\\n>\\n  <Input name=\\\"first_name\\\" placeholder=\\\"Enter first name\\\" />\\n  <br />\\n  <Input name=\\\"last_name\\\" placeholder=\\\"Enter last name\\\" />\\n  <br />\\n  {/* This is required because docz doesn\\'t support form submission 🤦‍ */}\\n  <Context.Consumer>\\n    {({ handleSubmit }) => (\\n      <button onClick={e => handleSubmit(e)}>Submit full name </button>\\n    )}\\n  </Context.Consumer>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      object,\n      string,\n      Form,\n      Context,\n      Input\n    }} mdxType=\"Playground\">\n  <Form schema={object().shape({\n        first_name: string().required('First name is required'),\n        last_name: string()\n      })} onSubmit={data => alert(JSON.stringify(data, null, 2))} mdxType=\"Form\">\n    <Input name='first_name' placeholder='Enter first name' mdxType=\"Input\" />\n    <br />\n    <Input name='last_name' placeholder='Enter last name' mdxType=\"Input\" />\n    <br />\n    {\n          /* This is required because docz doesn't support form submission 🤦‍ */\n        }\n    <Context.Consumer>\n      {({\n            handleSubmit\n          }) => <button onClick={e => handleSubmit(e)}>Submit full name </button>}\n    </Context.Consumer>\n  </Form>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import Context from './Context';\n\nexport default Context;","import { createContext } from 'react';\n\nexport default createContext({\n  initialValues: {},\n  errors: {},\n  scopePath: '',\n  registerField: () => {},\n  unregisterField: () => {},\n  handleSubmit: () => {},\n  handleFieldValidation: () => {}\n});","import React from 'react';\nimport dot from 'dot-object';\nimport { reach, object, mixed, array } from 'yup';\nimport PropTypes from 'prop-types';\nimport merge from 'deepmerge';\nimport { useDebouncedCallback } from 'use-debounce';\n\n// context\nimport FormContext from '../Context';\n\n// helper\nconst looptheloop = obj => {\n  const shape = {};\n\n  Object.keys(obj).forEach(key => {\n    if (obj[key] === undefined) return;\n    const keyType = obj[key].constructor.name;\n\n    if (keyType === 'Object') {\n      shape[key] = object().shape(looptheloop(obj[key]));\n    } else if (keyType === 'Array') {\n      const result = Object.keys(obj[key]).reduce(\n        (r, k) => ({ ...r, ...obj[key][k] }),\n        {}\n      );\n\n      shape[key] = array().of(object().shape(looptheloop({ ...result })));\n    } else {\n      shape[key] = obj[key];\n    }\n  });\n  return shape;\n};\n\n// exported\nconst Form = ({\n  initialValues,\n  children,\n  schema,\n  onSubmit,\n  fieldDebounced,\n  ...rest\n}) => {\n  const [fields, setFields] = React.useState([]);\n  const [errors, setErrors] = React.useState({});\n  const [initialData, setInitialData] = React.useState({});\n\n  React.useEffect(() => {\n    setInitialData(JSON.parse(JSON.stringify(initialValues)));\n  }, []);\n\n  function parseForm() {\n    const data = JSON.parse(JSON.stringify(initialValues));\n    const parsedDymanicSchema = {};\n\n    fields.forEach(({ name, ref, path, parseValue, dymanicSchema }) => {\n      const value = dot.pick(path, ref);\n\n      if (dymanicSchema) {\n        parsedDymanicSchema[name] = dymanicSchema;\n      } else {\n        parsedDymanicSchema[name] = mixed().notRequired();\n      }\n\n      data[name] = parseValue ? parseValue(value) : value;\n    });\n\n    dot.object(parsedDymanicSchema);\n    dot.object(data);\n\n    return {\n      data,\n      dymanicSchema: object().shape(looptheloop(parsedDymanicSchema))\n    };\n  }\n\n  function resetForm() {\n    fields.forEach(({ ref, path, clearValue }) => {\n      if (clearValue) {\n        return clearValue(ref);\n      }\n\n      return dot.set(path, '', ref);\n    });\n  }\n\n  async function handleDebouncedFieldValidation({ name, value }) {\n    const { data, dymanicSchema } = parseForm();\n\n    try {\n      const runSchema = schema || dymanicSchema;\n      if (runSchema) {\n        await reach(runSchema, name, data).validate(value);\n      }\n\n      const { [name]: remove, ...remaining } = errors;\n      setErrors(remaining);\n    } catch (err) {\n      const validationErrors = { ...errors };\n\n      if (err.message) {\n        validationErrors[name] = err.message;\n      }\n\n      setErrors(validationErrors);\n    }\n  }\n\n  // Debounce callback\n  const [handleFieldValidation] = useDebouncedCallback(\n    // function\n    ({ name, value }) => {\n      handleDebouncedFieldValidation({ name, value });\n    },\n    // delay in ms\n    fieldDebounced\n  );\n\n  async function handleValidation() {\n    const { data, dymanicSchema } = parseForm();\n    let castData = data;\n    let finalDataSet = {};\n\n    try {\n      const runSchema = schema || dymanicSchema;\n      if (runSchema) {\n        await runSchema.validate(data, {\n          abortEarly: false,\n          stripUnknown: true,\n          context: {}\n        });\n\n        castData = runSchema.cast(data, {\n          stripUnknown: true,\n          context: {}\n        });\n\n        console.log({ initialData }, { castData });\n\n        finalDataSet = merge(initialData, castData, {\n          arrayMerge: (destinationArray, sourceArray) => {\n            // console.log(destinationArray, sourceArray);\n\n            return sourceArray.map((mapArray, index) => {\n              console.log({ mapArray }, { destinationArray });\n              // console.log(typeof mapArray);\n\n              if (typeof mapArray === 'string') {\n                return destinationArray.push(mapArray);\n              }\n\n              return ({\n                ...destinationArray[index],\n                ...mapArray\n              });\n            });\n          }\n        });\n\n        console.log({ finalDataSet });\n      }\n\n      setErrors({});\n\n      if (typeof onSubmit === 'function') {\n        onSubmit(finalDataSet, { resetForm });\n      }\n      return { errors: {}, data: finalDataSet, resetForm };\n    } catch (err) {\n      const validationErrors = {};\n\n      if (!err.inner) {\n        throw err;\n      }\n\n      err.inner.forEach((error) => {\n        validationErrors[error.path] = error.message;\n      });\n\n      setErrors(validationErrors);\n      return { errors: validationErrors, data: finalDataSet, resetForm };\n    }\n  }\n\n  async function handleSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    return handleValidation();\n  }\n\n  function registerField(field) {\n    setFields(state => [...state, field]);\n  }\n\n  function unregisterField(name) {\n    setFields(state => state.filter(field => field.name !== name));\n  }\n\n  return (\n    <FormContext.Provider\n      value={ {\n        initialValues,\n        errors,\n        scopePath: '',\n        registerField,\n        unregisterField,\n        handleFieldValidation,\n        handleResetForm: resetForm,\n        handleSubmit\n      } }\n    >\n      <form { ...rest } data-testid='form' onSubmit={ handleSubmit }>\n        { children }\n      </form>\n    </FormContext.Provider>\n  );\n};\n\n\nForm.defaultProps = {\n  initialValues: {},\n  schema: null,\n  fieldDebounced: 10\n};\n\nForm.propTypes = {\n  /** Initial values to populate the form */\n  initialValues: PropTypes.object,\n  /** Overall yup validation object. ❗️ Will override inline field level schema */\n  schema: PropTypes.object,\n  /** Any react childrent you would like 😁 */\n  children: PropTypes.any.isRequired,\n  /** Function which returns the data object and a resetForm function */\n  onSubmit: PropTypes.func.isRequired,\n  /** Debounces the handleFieldValidation function */\n  fieldDebounced: PropTypes.number\n};\n\nexport default Form;","import dot from 'dot-object';\nimport React from 'react';\n\n// context\nimport FormContext from '../Context';\n\n// exported component\nexport default function useField(name) {\n  const {\n    initialValues,\n    errors,\n    scopePath,\n    unregisterField,\n    registerField,\n    handleSubmit,\n    handleFieldValidation\n  } = React.useContext(FormContext);\n\n  let fieldName;\n  if (scopePath) {\n    if (typeof name === 'number') {\n      fieldName = `${ scopePath }[${ name }]`;\n    } else {\n      fieldName = `${ scopePath }.${ name }`;\n    }\n  } else {\n    fieldName = `${ name }`;\n  }\n\n  React.useEffect(() => () => unregisterField(fieldName), [fieldName, name]);\n\n  const defaultValue = dot.pick(fieldName, initialValues);\n  const error = errors[fieldName];\n\n  return {\n    fieldName,\n    handleSubmit,\n    handleFieldValidation,\n    registerField,\n    defaultValue,\n    error\n  };\n}","import useField from './useField';\n\nexport default useField;","import React from 'react';\n\n// hool\nimport useField from '../useField';\n\n// exported component\nconst useDefault = ({ name, ref, schema, value, path = 'value' }) => {\n  const {\n    fieldName,\n    handleFieldValidation,\n    registerField,\n    defaultValue,\n    error\n  } = useField(name);\n\n  React.useEffect(() => {\n    if (ref.current) {\n      registerField({\n        name: fieldName,\n        ref: ref.current,\n        path,\n        dymanicSchema: schema\n      });\n    }\n  }, [ref.current, fieldName]);\n\n  const props = {\n    ref,\n    fieldName,\n    id: fieldName,\n    name: fieldName,\n    'aria-label': fieldName,\n    defaultValue: defaultValue || value,\n    error,\n    onChange: ({ target }) => handleFieldValidation({ name: target.name, value: target[path] }),\n    onBlur: ({ target }) => handleFieldValidation({ name: target.name, value: target[path] })\n  };\n\n  return props;\n};\n\nexport default useDefault;","import useDefault from './useDefault';\n\nexport default useDefault;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// helper\nimport useDefault from '../useDefault';\n\n// exported component\nconst InputField = ({\n  name,\n  label,\n  multiline,\n  schema,\n  value,\n  ...rest\n}) => {\n  const ref = React.useRef(null);\n\n  // custom behaviour and logic from useField\n  const {\n    error,\n    fieldName,\n    defaultValue,\n    ...bag\n  } = useDefault({\n    name,\n    ref,\n    schema,\n    value\n  });\n\n  // props to be spread on input elemnt\n  const props = {\n    ...rest,\n    ...bag,\n    defaultValue,\n    fieldName,\n    ref\n  };\n\n  return (\n    <>\n      { label && <label className='form__label' htmlFor={ fieldName }>{ label }</label> }\n\n      { multiline ? (\n        <textarea className='form__textarea' { ...props } />\n      ) : (\n        <input className='form__input' { ...props } />\n      ) }\n\n      { error && <span className='form__error'>{ error }</span> }\n    </>\n  );\n};\n\nInputField.defaultProps = {\n  label: null,\n  placeholder: '',\n  multiline: false,\n  schema: null,\n  value: null\n};\n\nInputField.propTypes = {\n  /** Name and ID for the field. This will define what this is called in the output */\n  name: PropTypes.string.isRequired,\n  /** Label to show next to the checkbox */\n  label: PropTypes.string,\n  /** placeholder text */\n  placeholder: PropTypes.string,\n  /** <textarea /> or <input /> */\n  multiline: PropTypes.bool,\n  /** Field level schema, will be overriden if a schema is passed into the <Form /> */\n  schema: PropTypes.any,\n  /** Initial value to populate the check state */\n  value: PropTypes.PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nexport default InputField;"],"sourceRoot":""}