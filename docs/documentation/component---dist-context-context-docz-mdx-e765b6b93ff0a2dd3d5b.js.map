{"version":3,"sources":["webpack:///../dist/Context/Context.docz.mdx","webpack:///../src/Context/index.js","webpack:///../src/Context/Context.js","webpack:///../src/Form/Form.js","webpack:///../src/useField/useField.js","webpack:///../src/useField/index.js","webpack:///../src/useDefault/useDefault.js","webpack:///../src/useDefault/index.js","webpack:///../src/Input/Input.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_9__","_extends","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_11__","__position","__code","__scope","Playground","Props","object","string","Form","Context","Input","_src_Form_Form__WEBPACK_IMPORTED_MODULE_13__","onSubmit","_","_src_Input_Input__WEBPACK_IMPORTED_MODULE_15__","name","schema","required","placeholder","_src_Context_Context__WEBPACK_IMPORTED_MODULE_14__","Consumer","Function","prototype","toJSON","this","toString","JSON","stringify","data","alert","_ref2","handleSubmit","errors","disabled","keys","length","onClick","e","isMDXComponent","__webpack_exports__","_Context__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","createContext","initialValues","scopePath","registerField","unregisterField","getFields","handleFieldValidation","looptheloop","obj","shape","key","undefined","keyType","result","reduce","r","k","_objectSpread","array","children","fieldDebounced","rest","_React$useState","React","fields","setFields","_React$useState2","setErrors","_React$useState3","initialData","setInitialData","parseForm","parsedDymanicSchema","ref","path","parseValue","dymanicSchema","value","dot","mixed","resetForm","_ref3","clearValue","_handleDebouncedFieldValidation","_asyncToGenerator","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_15___default","a","mark","_callee","_ref4","_parseForm","runSchema","remaining","validationErrors","wrap","_context","prev","next","reach","map","_toPropertyKey","t0","message","stop","apply","arguments","useDebouncedCallback","_ref5","_x","handleDebouncedFieldValidation","handleValidation","_handleValidation","_callee2","_parseForm2","castData","finalDataSet","_context2","validate","abortEarly","stripUnknown","context","cast","merge","arrayMerge","destinationArray","sourceArray","mapArray","index","abrupt","inner","forEach","error","_x2","_handleSubmit","_callee3","_context3","_emotion_core__WEBPACK_IMPORTED_MODULE_17__","_Context__WEBPACK_IMPORTED_MODULE_23__","Provider","field","state","concat","_toConsumableArray","filter","handleResetForm","data-testid","useField","fieldName","_React$useContext","defaultValue","src_useField","useDefault","_ref$parseValue","_ref$path","_useField","current","aria-label","onChange","target","onBlur","src_useDefault_useDefault","InputField","label","multiline","_useDefault","_emotion_core__WEBPACK_IMPORTED_MODULE_9__","react__WEBPACK_IMPORTED_MODULE_10___default","Fragment","className","htmlFor"],"mappings":"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","file":"component---dist-context-context-docz-mdx-e765b6b93ff0a2dd3d5b.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jamesbliss/Sites/@jamesbliss/bambino-form/.docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { object, string } from 'yup';\nimport Form from '../../src/Form/Form';\nimport Context from '../../src/Context/Context';\nimport Input from '../../src/Input/Input';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"context\"\n    }}>{`Context`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<Context />`}</inlineCode>{` offers access to various props without going through other hooks and components. If you want direct access to the context powering the current form this is you go to!`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={0} __code={'() => (\\n  <Form onSubmit={_ => _}>\\n    <Input\\n      name=\\\"name\\\"\\n      schema={string().required(\\'Name is required\\')}\\n      placeholder=\\\"Enter name\\\"\\n    />\\n    <Context.Consumer>\\n      {props => {\\n        /* hack so you can see functions 🙈 */\\n        Function.prototype.toJSON = function() {\\n          return this.toString()\\n        }\\n        /* rending everything out of the context! */\\n        return <pre>{JSON.stringify(props, null, 2)}</pre>\\n      }}\\n    </Context.Consumer>\\n  </Form>\\n)'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      object,\n      string,\n      Form,\n      Context,\n      Input\n    }} mdxType=\"Playground\">\n  {() => <Form onSubmit={_ => _} mdxType=\"Form\">\n      <Input name='name' schema={string().required('Name is required')} placeholder='Enter name' mdxType=\"Input\" />\n      <Context.Consumer>\n        {props => {\n            /* hack so you can see functions 🙈 */\n            Function.prototype.toJSON = function () {\n              return this.toString();\n            };\n            /* rending everything out of the context! */\n\n\n            return <pre>{JSON.stringify(props, null, 2)}</pre>;\n          }}\n      </Context.Consumer>\n    </Form>}\n    </Playground>\n    <h2 {...{\n      \"id\": \"disable-submit\"\n    }}>{`Disable Submit`}</h2>\n    <p>{`With this contextual power you can do things like disabling the submit if there are errors.`}</p>\n    <p>{`I'll leave you to come up with me 😅`}</p>\n    <Playground __position={1} __code={'() => (\\n  <Form onSubmit={data => alert(JSON.stringify(data, null, 2))}>\\n    <Input\\n      name=\\\"name\\\"\\n      schema={string().required(\\'Name is required\\')}\\n      placeholder=\\\"Enter name\\\"\\n    />\\n    <br />\\n    {/* This is required because docz doesn\\'t support form submission 🤦‍ */}\\n    <Context.Consumer>\\n      {({ handleSubmit, errors }) => (\\n        <button\\n          disabled={Object.keys(errors).length}\\n          onClick={e => handleSubmit(e)}\\n        >\\n          Submit full name\\n        </button>\\n      )}\\n    </Context.Consumer>\\n  </Form>\\n)'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      object,\n      string,\n      Form,\n      Context,\n      Input\n    }} mdxType=\"Playground\">\n  {() => <Form onSubmit={data => alert(JSON.stringify(data, null, 2))} mdxType=\"Form\">\n      <Input name='name' schema={string().required('Name is required')} placeholder='Enter name' mdxType=\"Input\" />\n      <br />\n      {\n          /* This is required because docz doesn't support form submission 🤦‍ */\n        }\n      <Context.Consumer>\n        {({\n            handleSubmit,\n            errors\n          }) => <button disabled={Object.keys(errors).length} onClick={e => handleSubmit(e)}>\n            Submit full name\n          </button>}\n      </Context.Consumer>\n    </Form>}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import Context from './Context';\n\nexport default Context;","import { createContext } from 'react';\n\nexport default createContext({\n  initialValues: {},\n  errors: {},\n  scopePath: '',\n  registerField: () => {},\n  unregisterField: () => {},\n  getFields: () => {},\n  handleSubmit: () => {},\n  handleFieldValidation: () => {}\n});","import React from 'react';\nimport dot from 'dot-object';\nimport { reach, object, mixed, array } from 'yup';\nimport PropTypes from 'prop-types';\nimport merge from 'deepmerge';\nimport { useDebouncedCallback } from 'use-debounce';\n\n// context\nimport FormContext from '../Context';\n\n// helper\nconst looptheloop = obj => {\n  const shape = {};\n\n  Object.keys(obj).forEach(key => {\n    if (obj[key] === undefined) return;\n    const keyType = obj[key].constructor.name;\n\n    if (keyType === 'Object') {\n      shape[key] = object().shape(looptheloop(obj[key]));\n    } else if (keyType === 'Array') {\n      const result = Object.keys(obj[key]).reduce(\n        (r, k) => ({ ...r, ...obj[key][k] }),\n        {}\n      );\n\n      shape[key] = array().of(object().shape(looptheloop({ ...result })));\n    } else {\n      shape[key] = obj[key];\n    }\n  });\n  return shape;\n};\n\n// exported\nconst Form = ({\n  initialValues,\n  children,\n  schema,\n  onSubmit,\n  fieldDebounced,\n  ...rest\n}) => {\n  const [fields, setFields] = React.useState([]);\n  const [errors, setErrors] = React.useState({});\n  const [initialData, setInitialData] = React.useState({});\n\n  React.useEffect(() => {\n    setInitialData(JSON.parse(JSON.stringify(initialValues)));\n  }, []);\n\n  function parseForm() {\n    const data = JSON.parse(JSON.stringify(initialValues));\n    const parsedDymanicSchema = {};\n\n    fields.forEach(({ name, ref, path, parseValue, dymanicSchema }) => {\n      const value = dot.pick(path, ref);\n\n      if (dymanicSchema) {\n        parsedDymanicSchema[name] = dymanicSchema;\n      } else {\n        parsedDymanicSchema[name] = mixed().notRequired();\n      }\n\n      data[name] = typeof parseValue === 'function' ? parseValue(value) : value;\n    });\n\n    dot.object(parsedDymanicSchema);\n    dot.object(data);\n\n    return {\n      data,\n      dymanicSchema: object().shape(looptheloop(parsedDymanicSchema))\n    };\n  }\n\n  function resetForm() {\n    fields.forEach(({ ref, path, clearValue }) => {\n      if (clearValue) {\n        return clearValue(ref);\n      }\n\n      return dot.set(path, '', ref);\n    });\n  }\n\n  async function handleDebouncedFieldValidation({ name, value }) {\n    const { data, dymanicSchema } = parseForm();\n\n    try {\n      const runSchema = schema || dymanicSchema;\n      if (runSchema) {\n        await reach(runSchema, name, data).validate(value);\n      }\n\n      const { [name]: remove, ...remaining } = errors;\n      setErrors(remaining);\n    } catch (err) {\n      const validationErrors = { ...errors };\n\n      if (err.message) {\n        validationErrors[name] = err.message;\n      }\n\n      setErrors(validationErrors);\n    }\n  }\n\n  // Debounce callback\n  const [handleFieldValidation] = useDebouncedCallback(\n    // function\n    ({ name, value }) => {\n      handleDebouncedFieldValidation({ name, value });\n    },\n    // delay in ms\n    fieldDebounced\n  );\n\n  async function handleValidation() {\n    const { data, dymanicSchema } = parseForm();\n    let castData = data;\n    let finalDataSet = {};\n\n    try {\n      const runSchema = schema || dymanicSchema;\n      if (runSchema) {\n        await runSchema.validate(data, {\n          abortEarly: false,\n          stripUnknown: true,\n          context: {}\n        });\n\n        castData = runSchema.cast(data, {\n          stripUnknown: true,\n          context: {}\n        });\n\n        finalDataSet = merge(initialData, castData, {\n          arrayMerge: (destinationArray, sourceArray) => {\n            return sourceArray.map((mapArray, index) => {\n              if (typeof mapArray === 'string') {\n                return destinationArray.push(mapArray);\n              }\n              return ({\n                ...destinationArray[index],\n                ...mapArray\n              });\n            });\n          }\n        });\n      }\n\n      setErrors({});\n\n      if (typeof onSubmit === 'function') {\n        onSubmit(finalDataSet, { resetForm });\n      }\n      return { errors: {}, data: finalDataSet, resetForm };\n    } catch (err) {\n      const validationErrors = {};\n\n      if (!err.inner) {\n        throw err;\n      }\n\n      err.inner.forEach((error) => {\n        validationErrors[error.path] = error.message;\n      });\n\n      setErrors(validationErrors);\n      return { errors: validationErrors, data: finalDataSet, resetForm };\n    }\n  }\n\n  async function handleSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    return handleValidation();\n  }\n\n  function registerField(field) {\n    setFields(state => [...state, field]);\n  }\n\n  function unregisterField(name) {\n    setFields(state => state.filter(field => field.name !== name));\n  }\n\n  return (\n    <FormContext.Provider\n      value={ {\n        initialValues,\n        errors,\n        scopePath: '',\n        registerField,\n        unregisterField,\n        getFields: parseForm,\n        handleFieldValidation,\n        handleResetForm: resetForm,\n        handleSubmit\n      } }\n    >\n      <form { ...rest } data-testid='form' onSubmit={ handleSubmit }>\n        { children }\n      </form>\n    </FormContext.Provider>\n  );\n};\n\n\nForm.defaultProps = {\n  initialValues: {},\n  schema: null,\n  fieldDebounced: 10\n};\n\nForm.propTypes = {\n  /** Initial values to populate the form */\n  initialValues: PropTypes.object,\n  /** Overall yup validation object. ❗️ Will override inline field level schema */\n  schema: PropTypes.object,\n  /** Any react childrent you would like 😁 */\n  children: PropTypes.any.isRequired,\n  /** Function which returns the data object and a resetForm function */\n  onSubmit: PropTypes.func.isRequired,\n  /** Debounces the handleFieldValidation function */\n  fieldDebounced: PropTypes.number\n};\n\nexport default Form;","import dot from 'dot-object';\nimport React from 'react';\n\n// context\nimport FormContext from '../Context';\n\n// exported component\nexport default function useField(name) {\n  const {\n    initialValues,\n    errors,\n    scopePath,\n    unregisterField,\n    registerField,\n    handleSubmit,\n    handleFieldValidation\n  } = React.useContext(FormContext);\n\n  let fieldName;\n  if (scopePath) {\n    if (typeof name === 'number') {\n      fieldName = `${ scopePath }[${ name }]`;\n    } else {\n      fieldName = `${ scopePath }.${ name }`;\n    }\n  } else {\n    fieldName = `${ name }`;\n  }\n\n  React.useEffect(() => () => unregisterField(fieldName), [fieldName, name]);\n\n  const defaultValue = dot.pick(fieldName, initialValues);\n  const error = errors[fieldName];\n\n  return {\n    fieldName,\n    handleSubmit,\n    handleFieldValidation,\n    registerField,\n    defaultValue,\n    error\n  };\n}","import useField from './useField';\n\nexport default useField;","import React from 'react';\n\n// hool\nimport useField from '../useField';\n\n// exported component\nconst useDefault = ({ name, ref, schema, value, parseValue = null, path = 'value' }) => {\n  const {\n    fieldName,\n    handleFieldValidation,\n    registerField,\n    defaultValue,\n    error\n  } = useField(name);\n\n  React.useEffect(() => {\n    if (ref.current) {\n      registerField({\n        name: fieldName,\n        ref: ref.current,\n        path,\n        parseValue,\n        dymanicSchema: schema\n      });\n    }\n  }, [ref.current, fieldName]);\n\n  const props = {\n    ref,\n    fieldName,\n    id: fieldName,\n    name: fieldName,\n    'aria-label': fieldName,\n    defaultValue: defaultValue || value,\n    error,\n    onChange: ({ target }) => handleFieldValidation({ name: target.name, value: target[path] }),\n    onBlur: ({ target }) => handleFieldValidation({ name: target.name, value: target[path] })\n  };\n\n  return props;\n};\n\nexport default useDefault;","import useDefault from './useDefault';\n\nexport default useDefault;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// helper\nimport useDefault from '../useDefault';\n\n// exported component\nconst InputField = ({\n  name,\n  label,\n  multiline,\n  schema,\n  value,\n  ...rest\n}) => {\n  const ref = React.useRef(null);\n\n  // custom behaviour and logic from useField\n  const {\n    error,\n    fieldName,\n    defaultValue,\n    ...bag\n  } = useDefault({\n    name,\n    ref,\n    schema,\n    value\n  });\n\n  // props to be spread on input elemnt\n  const props = {\n    ...rest,\n    ...bag,\n    defaultValue,\n    ref\n  };\n\n  return (\n    <>\n      { label && <label className='form__label' htmlFor={ fieldName }>{ label }</label> }\n\n      { multiline ? (\n        <textarea className='form__textarea' { ...props } />\n      ) : (\n        <input className='form__input' { ...props } />\n      ) }\n\n      { error && <span className='form__error'>{ error }</span> }\n    </>\n  );\n};\n\nInputField.defaultProps = {\n  label: null,\n  placeholder: '',\n  multiline: false,\n  schema: null,\n  value: null\n};\n\nInputField.propTypes = {\n  /** Name and ID for the field. This will define what this is called in the output */\n  name: PropTypes.string.isRequired,\n  /** Label to show next to the checkbox */\n  label: PropTypes.string,\n  /** placeholder text */\n  placeholder: PropTypes.string,\n  /** <textarea /> or <input /> */\n  multiline: PropTypes.bool,\n  /** Field level schema, will be overriden if a schema is passed into the <Form /> */\n  schema: PropTypes.any,\n  /** Initial value to populate the check state */\n  value: PropTypes.PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nexport default InputField;"],"sourceRoot":""}