{"version":3,"sources":["webpack:///../src/Scope/Scope.js","webpack:///../dist/Scope/Scope.docz.mdx","webpack:///../src/Context/index.js","webpack:///../src/Context/Context.js","webpack:///../src/Form/Form.js","webpack:///../src/useField/useField.js","webpack:///../src/useField/index.js","webpack:///../src/useDefault/useDefault.js","webpack:///../src/useDefault/index.js","webpack:///../src/Input/Input.js"],"names":["Scope","_ref","path","children","_useContext","useContext","src_Context","scopePath","form","_objectWithoutPropertiesLoose","formattedPath","Object","core_browser_esm","Provider","value","_objectSpread","src_Scope_Scope","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","Scope_docz_objectWithoutPropertiesLoose","index_es","_extends","mdxType","id","parentName","index_esm","of","__position","__code","__scope","Playground","Props","object","string","Form","Context","Input","onSubmit","data","alert","JSON","stringify","name","placeholder","Consumer","_ref2","handleSubmit","onClick","e","_ref3","isMDXComponent","__webpack_exports__","_Context__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","createContext","initialValues","errors","registerField","unregisterField","getFields","handleFieldValidation","looptheloop","obj","shape","key","undefined","keyType","result","keys","reduce","r","k","array","schema","fieldDebounced","rest","_React$useState","React","fields","setFields","_React$useState2","setErrors","_React$useState3","initialData","setInitialData","parseForm","parsedDymanicSchema","ref","parseValue","dymanicSchema","dot","mixed","resetForm","clearValue","_handleDebouncedFieldValidation","_asyncToGenerator","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_15___default","a","mark","_callee","_ref4","_parseForm","runSchema","remaining","validationErrors","wrap","_context","prev","next","reach","map","_toPropertyKey","t0","message","stop","apply","this","arguments","useDebouncedCallback","_ref5","_x","handleDebouncedFieldValidation","handleValidation","_handleValidation","_callee2","_parseForm2","castData","finalDataSet","_context2","validate","abortEarly","stripUnknown","context","cast","merge","arrayMerge","destinationArray","sourceArray","mapArray","index","abrupt","inner","forEach","error","_x2","_handleSubmit","_callee3","_context3","_emotion_core__WEBPACK_IMPORTED_MODULE_17__","_Context__WEBPACK_IMPORTED_MODULE_23__","field","state","concat","_toConsumableArray","filter","handleResetForm","data-testid","useField","fieldName","_React$useContext","defaultValue","src_useField","useDefault","_ref$parseValue","_ref$path","_useField","current","aria-label","onChange","target","onBlur","src_useDefault_useDefault","InputField","label","multiline","_useDefault","_emotion_core__WEBPACK_IMPORTED_MODULE_9__","react__WEBPACK_IMPORTED_MODULE_10___default","Fragment","className","htmlFor"],"mappings":"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","file":"component---dist-scope-scope-docz-mdx-3250bab9951cd56572d5.js","sourcesContent":["\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport FormContext from '../Context';\n\nconst Scope = ({ path, children }) => {\n  const { scopePath, ...form } = useContext(FormContext);\n\n  // default to pure path\n  let formattedPath = path;\n  if (scopePath) {\n    // if number it should key differently to align with yup scheme.\n    formattedPath = (typeof path === 'number' ? `[${ path }]` : `.${ path }`);\n  }\n\n  // return new provider scroped to the new path\n  return (\n    <FormContext.Provider\n      value={ {\n        ...form,\n        scopePath: scopePath.concat(formattedPath)\n      } }\n    >\n      { children }\n    </FormContext.Provider>\n  );\n};\n\nScope.propTypes = {\n  /** New path of child elements to sit in. Number = ID in an arrya. String = key in object */\n  path: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ]).isRequired,\n  /** Inner components */\n  children: PropTypes.any.isRequired\n};\n\nexport default Scope;","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jamesbliss/Sites/@jamesbliss/bambino-form/.docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { object, string } from 'yup';\nimport Form from '../../src/Form/Form';\nimport Context from '../../src/Context/Context';\nimport Scope from '../../src/Scope/Scope';\nimport Input from '../../src/Input/Input';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"scope\"\n    }}>{`Scope`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<Scope />`}</inlineCode>{` component is a magical component which allows you to nest fields!`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Scope} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<Form onSubmit={data => alert(JSON.stringify(data, null, 2))}>\\n  <Input name=\\\"name\\\" placeholder=\\\"Name\\\" />\\n  <br />\\n  <Scope path=\\\"child\\\">\\n    <Input name=\\\"child_field\\\" placeholder=\\\"Child field\\\" />\\n  </Scope>\\n  <br />\\n  {/* This is required because docz doesn\\'t support form submission 🤦‍ */}\\n  <Context.Consumer>\\n    {({ handleSubmit }) => (\\n      <button onClick={e => handleSubmit(e)}>Submit name </button>\\n    )}\\n  </Context.Consumer>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      object,\n      string,\n      Form,\n      Context,\n      Scope,\n      Input\n    }} mdxType=\"Playground\">\n  <Form onSubmit={data => alert(JSON.stringify(data, null, 2))} mdxType=\"Form\">\n    <Input name='name' placeholder='Name' mdxType=\"Input\" />\n    <br />\n    <Scope path='child' mdxType=\"Scope\">\n      <Input name='child_field' placeholder='Child field' mdxType=\"Input\" />\n    </Scope>\n    <br />\n    {\n          /* This is required because docz doesn't support form submission 🤦‍ */\n        }\n    <Context.Consumer>\n      {({\n            handleSubmit\n          }) => <button onClick={e => handleSubmit(e)}>Submit name </button>}\n    </Context.Consumer>\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"usage-with-arrays\"\n    }}>{`Usage with arrays!`}</h2>\n    <Playground __position={2} __code={'<Form onSubmit={data => alert(JSON.stringify(data, null, 2))}>\\n  <Input name=\\\"name\\\" placeholder=\\\"Name\\\" />\\n  <br />\\n  <Scope path=\\\"child\\\">\\n    <Input name=\\\"child_field\\\" placeholder=\\\"Child field\\\" />\\n    <Scope path=\\\"child_array\\\">\\n      <Scope path={0}>\\n        <br />\\n        <Input name=\\\"child_array_field\\\" placeholder=\\\"Child array field\\\" />\\n      </Scope>\\n      <Scope path={1}>\\n        <br />\\n        <Input name=\\\"child_array_field\\\" placeholder=\\\"Child array field\\\" />\\n      </Scope>\\n    </Scope>\\n  </Scope>\\n  <br />\\n  {/* This is required because docz doesn\\'t support form submission 🤦‍ */}\\n  <Context.Consumer>\\n    {({ handleSubmit }) => (\\n      <button onClick={e => handleSubmit(e)}>Submit name </button>\\n    )}\\n  </Context.Consumer>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      object,\n      string,\n      Form,\n      Context,\n      Scope,\n      Input\n    }} mdxType=\"Playground\">\n  <Form onSubmit={data => alert(JSON.stringify(data, null, 2))} mdxType=\"Form\">\n    <Input name='name' placeholder='Name' mdxType=\"Input\" />\n    <br />\n    <Scope path='child' mdxType=\"Scope\">\n      <Input name='child_field' placeholder='Child field' mdxType=\"Input\" />\n      <Scope path='child_array' mdxType=\"Scope\">\n        <Scope path={0} mdxType=\"Scope\">\n          <br />\n          <Input name='child_array_field' placeholder='Child array field' mdxType=\"Input\" />\n        </Scope>\n        <Scope path={1} mdxType=\"Scope\">\n          <br />\n          <Input name='child_array_field' placeholder='Child array field' mdxType=\"Input\" />\n        </Scope>\n      </Scope>\n    </Scope>\n    <br />\n    {\n          /* This is required because docz doesn't support form submission 🤦‍ */\n        }\n    <Context.Consumer>\n      {({\n            handleSubmit\n          }) => <button onClick={e => handleSubmit(e)}>Submit name </button>}\n    </Context.Consumer>\n  </Form>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import Context from './Context';\n\nexport default Context;","import { createContext } from 'react';\n\nexport default createContext({\n  initialValues: {},\n  errors: {},\n  scopePath: '',\n  registerField: () => {},\n  unregisterField: () => {},\n  getFields: () => {},\n  handleSubmit: () => {},\n  handleFieldValidation: () => {}\n});","import React from 'react';\nimport dot from 'dot-object';\nimport { reach, object, mixed, array } from 'yup';\nimport PropTypes from 'prop-types';\nimport merge from 'deepmerge';\nimport { useDebouncedCallback } from 'use-debounce';\n\n// context\nimport FormContext from '../Context';\n\n// helper\nconst looptheloop = obj => {\n  const shape = {};\n\n  Object.keys(obj).forEach(key => {\n    if (obj[key] === undefined) return;\n    const keyType = obj[key].constructor.name;\n\n    if (keyType === 'Object') {\n      shape[key] = object().shape(looptheloop(obj[key]));\n    } else if (keyType === 'Array') {\n      const result = Object.keys(obj[key]).reduce(\n        (r, k) => ({ ...r, ...obj[key][k] }),\n        {}\n      );\n\n      shape[key] = array().of(object().shape(looptheloop({ ...result })));\n    } else {\n      shape[key] = obj[key];\n    }\n  });\n  return shape;\n};\n\n// exported\nconst Form = ({\n  initialValues,\n  children,\n  schema,\n  onSubmit,\n  fieldDebounced,\n  ...rest\n}) => {\n  const [fields, setFields] = React.useState([]);\n  const [errors, setErrors] = React.useState({});\n  const [initialData, setInitialData] = React.useState({});\n\n  React.useEffect(() => {\n    setInitialData(JSON.parse(JSON.stringify(initialValues)));\n  }, []);\n\n  function parseForm() {\n    const data = JSON.parse(JSON.stringify(initialValues));\n    const parsedDymanicSchema = {};\n\n    fields.forEach(({ name, ref, path, parseValue, dymanicSchema }) => {\n      const value = dot.pick(path, ref);\n\n      if (dymanicSchema) {\n        parsedDymanicSchema[name] = dymanicSchema;\n      } else {\n        parsedDymanicSchema[name] = mixed().notRequired();\n      }\n\n      data[name] = typeof parseValue === 'function' ? parseValue(value) : value;\n    });\n\n    dot.object(parsedDymanicSchema);\n    dot.object(data);\n\n    return {\n      data,\n      dymanicSchema: object().shape(looptheloop(parsedDymanicSchema))\n    };\n  }\n\n  function resetForm() {\n    fields.forEach(({ ref, path, clearValue }) => {\n      if (clearValue) {\n        return clearValue(ref);\n      }\n\n      return dot.set(path, '', ref);\n    });\n  }\n\n  async function handleDebouncedFieldValidation({ name, value }) {\n    const { data, dymanicSchema } = parseForm();\n\n    try {\n      const runSchema = schema || dymanicSchema;\n      if (runSchema) {\n        await reach(runSchema, name, data).validate(value);\n      }\n\n      const { [name]: remove, ...remaining } = errors;\n      setErrors(remaining);\n    } catch (err) {\n      const validationErrors = { ...errors };\n\n      if (err.message) {\n        validationErrors[name] = err.message;\n      }\n\n      setErrors(validationErrors);\n    }\n  }\n\n  // Debounce callback\n  const [handleFieldValidation] = useDebouncedCallback(\n    // function\n    ({ name, value }) => {\n      handleDebouncedFieldValidation({ name, value });\n    },\n    // delay in ms\n    fieldDebounced\n  );\n\n  async function handleValidation() {\n    const { data, dymanicSchema } = parseForm();\n    let castData = data;\n    let finalDataSet = {};\n\n    try {\n      const runSchema = schema || dymanicSchema;\n      if (runSchema) {\n        await runSchema.validate(data, {\n          abortEarly: false,\n          stripUnknown: true,\n          context: {}\n        });\n\n        castData = runSchema.cast(data, {\n          stripUnknown: true,\n          context: {}\n        });\n\n        finalDataSet = merge(initialData, castData, {\n          arrayMerge: (destinationArray, sourceArray) => {\n            return sourceArray.map((mapArray, index) => {\n              if (typeof mapArray === 'string') {\n                return destinationArray.push(mapArray);\n              }\n              return ({\n                ...destinationArray[index],\n                ...mapArray\n              });\n            });\n          }\n        });\n      }\n\n      setErrors({});\n\n      if (typeof onSubmit === 'function') {\n        onSubmit(finalDataSet, { resetForm });\n      }\n      return { errors: {}, data: finalDataSet, resetForm };\n    } catch (err) {\n      const validationErrors = {};\n\n      if (!err.inner) {\n        throw err;\n      }\n\n      err.inner.forEach((error) => {\n        validationErrors[error.path] = error.message;\n      });\n\n      setErrors(validationErrors);\n      return { errors: validationErrors, data: finalDataSet, resetForm };\n    }\n  }\n\n  async function handleSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    return handleValidation();\n  }\n\n  function registerField(field) {\n    setFields(state => [...state, field]);\n  }\n\n  function unregisterField(name) {\n    setFields(state => state.filter(field => field.name !== name));\n  }\n\n  return (\n    <FormContext.Provider\n      value={ {\n        initialValues,\n        errors,\n        scopePath: '',\n        registerField,\n        unregisterField,\n        getFields: parseForm,\n        handleFieldValidation,\n        handleResetForm: resetForm,\n        handleSubmit\n      } }\n    >\n      <form { ...rest } data-testid='form' onSubmit={ handleSubmit }>\n        { children }\n      </form>\n    </FormContext.Provider>\n  );\n};\n\n\nForm.defaultProps = {\n  initialValues: {},\n  schema: null,\n  fieldDebounced: 10\n};\n\nForm.propTypes = {\n  /** Initial values to populate the form */\n  initialValues: PropTypes.object,\n  /** Overall yup validation object. ❗️ Will override inline field level schema */\n  schema: PropTypes.object,\n  /** Any react childrent you would like 😁 */\n  children: PropTypes.any.isRequired,\n  /** Function which returns the data object and a resetForm function */\n  onSubmit: PropTypes.func.isRequired,\n  /** Debounces the handleFieldValidation function */\n  fieldDebounced: PropTypes.number\n};\n\nexport default Form;","import dot from 'dot-object';\nimport React from 'react';\n\n// context\nimport FormContext from '../Context';\n\n// exported component\nexport default function useField(name) {\n  const {\n    initialValues,\n    errors,\n    scopePath,\n    unregisterField,\n    registerField,\n    handleSubmit,\n    handleFieldValidation\n  } = React.useContext(FormContext);\n\n  let fieldName;\n  if (scopePath) {\n    if (typeof name === 'number') {\n      fieldName = `${ scopePath }[${ name }]`;\n    } else {\n      fieldName = `${ scopePath }.${ name }`;\n    }\n  } else {\n    fieldName = `${ name }`;\n  }\n\n  React.useEffect(() => () => unregisterField(fieldName), [fieldName, name]);\n\n  const defaultValue = dot.pick(fieldName, initialValues);\n  const error = errors[fieldName];\n\n  return {\n    fieldName,\n    handleSubmit,\n    handleFieldValidation,\n    registerField,\n    defaultValue,\n    error\n  };\n}","import useField from './useField';\n\nexport default useField;","import React from 'react';\n\n// hool\nimport useField from '../useField';\n\n// exported component\nconst useDefault = ({ name, ref, schema, value, parseValue = null, path = 'value' }) => {\n  const {\n    fieldName,\n    handleFieldValidation,\n    registerField,\n    defaultValue,\n    error\n  } = useField(name);\n\n  React.useEffect(() => {\n    if (ref.current) {\n      registerField({\n        name: fieldName,\n        ref: ref.current,\n        path,\n        parseValue,\n        dymanicSchema: schema\n      });\n    }\n  }, [ref.current, fieldName]);\n\n  const props = {\n    ref,\n    fieldName,\n    id: fieldName,\n    name: fieldName,\n    'aria-label': fieldName,\n    defaultValue: defaultValue || value,\n    error,\n    onChange: ({ target }) => handleFieldValidation({ name: target.name, value: target[path] }),\n    onBlur: ({ target }) => handleFieldValidation({ name: target.name, value: target[path] })\n  };\n\n  return props;\n};\n\nexport default useDefault;","import useDefault from './useDefault';\n\nexport default useDefault;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// helper\nimport useDefault from '../useDefault';\n\n// exported component\nconst InputField = ({\n  name,\n  label,\n  multiline,\n  schema,\n  value,\n  ...rest\n}) => {\n  const ref = React.useRef(null);\n\n  // custom behaviour and logic from useField\n  const {\n    error,\n    fieldName,\n    defaultValue,\n    ...bag\n  } = useDefault({\n    name,\n    ref,\n    schema,\n    value\n  });\n\n  // props to be spread on input elemnt\n  const props = {\n    ...rest,\n    ...bag,\n    defaultValue,\n    ref\n  };\n\n  return (\n    <>\n      { label && <label className='form__label' htmlFor={ fieldName }>{ label }</label> }\n\n      { multiline ? (\n        <textarea className='form__textarea' { ...props } />\n      ) : (\n        <input className='form__input' { ...props } />\n      ) }\n\n      { error && <span className='form__error'>{ error }</span> }\n    </>\n  );\n};\n\nInputField.defaultProps = {\n  label: null,\n  placeholder: '',\n  multiline: false,\n  schema: null,\n  value: null\n};\n\nInputField.propTypes = {\n  /** Name and ID for the field. This will define what this is called in the output */\n  name: PropTypes.string.isRequired,\n  /** Label to show next to the checkbox */\n  label: PropTypes.string,\n  /** placeholder text */\n  placeholder: PropTypes.string,\n  /** <textarea /> or <input /> */\n  multiline: PropTypes.bool,\n  /** Field level schema, will be overriden if a schema is passed into the <Form /> */\n  schema: PropTypes.any,\n  /** Initial value to populate the check state */\n  value: PropTypes.PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nexport default InputField;"],"sourceRoot":""}