{"version":3,"sources":["webpack:///../src/Check/Check.js","webpack:///../src/Check/Check.docz.mdx","webpack:///../src/Context/index.js","webpack:///../src/Context/Context.js","webpack:///../src/Form/Form.js","webpack:///../src/useField/useField.js","webpack:///../src/useField/index.js","webpack:///../src/useDefault/useDefault.js","webpack:///../src/useDefault/index.js"],"names":["CheckField","_ref","name","label","schema","value","rest","_objectWithoutPropertiesLoose","ref","React","_useDefault","useDefault","path","error","fieldName","defaultValue","props","_objectSpread","type","Object","core_browser_esm","react_default","a","Fragment","_extends","className","htmlFor","Check","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","Check_docz_objectWithoutPropertiesLoose","index_es","Check_docz_extends","mdxType","id","index_esm","of","__position","__code","__scope","Playground","Props","bool","Form","onSubmit","_","oneOf","isMDXComponent","__webpack_exports__","_Context__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","createContext","initialValues","errors","scopePath","registerField","unregisterField","getFields","handleSubmit","handleFieldValidation","looptheloop","obj","shape","key","undefined","keyType","object","result","keys","reduce","r","k","array","children","fieldDebounced","_React$useState","fields","setFields","_React$useState2","setErrors","_React$useState3","initialData","setInitialData","parseForm","data","JSON","parsedDymanicSchema","_ref2","parseValue","dymanicSchema","dot","mixed","resetForm","_ref3","clearValue","_handleDebouncedFieldValidation","_asyncToGenerator","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_15___default","mark","_callee","_ref4","_parseForm","runSchema","remaining","validationErrors","wrap","_context","prev","next","reach","map","_toPropertyKey","t0","message","stop","apply","this","arguments","useDebouncedCallback","_ref5","_x","handleDebouncedFieldValidation","handleValidation","_handleValidation","_callee2","_parseForm2","castData","finalDataSet","_context2","validate","abortEarly","stripUnknown","context","cast","merge","arrayMerge","destinationArray","sourceArray","mapArray","index","abrupt","inner","forEach","_x2","_handleSubmit","_callee3","e","_context3","_emotion_core__WEBPACK_IMPORTED_MODULE_17__","_Context__WEBPACK_IMPORTED_MODULE_23__","Provider","field","state","concat","_toConsumableArray","filter","handleResetForm","data-testid","useField","_React$useContext","Context","src_useField","_ref$parseValue","_ref$path","_useField","current","aria-label","onChange","target","onBlur","src_useDefault_useDefault"],"mappings":"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","file":"component---src-check-check-docz-mdx-5a2123106cc73dd77bc8.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n// helper\nimport useDefault from '../useDefault';\n\n// exported component\nconst CheckField = ({\n  name,\n  label,\n  schema,\n  value,\n  ...rest\n}) => {\n  const ref = React.useRef(null);\n\n  // custom behaviour and logic from useField\n  const {\n    error,\n    fieldName,\n    defaultValue,\n    ...bag\n  } = useDefault({\n    name,\n    ref,\n    schema,\n    value,\n    path: 'checked'\n  });\n\n  // props for check element\n  const props = {\n    ...rest,\n    ...bag,\n    type: 'checkbox',\n    defaultValue,\n    ref\n  };\n\n  return (\n    <>\n      <input className='form__input' { ...props } />\n\n      { label && <label className='form__label' htmlFor={ fieldName }>{ label }</label> }\n\n      { error && <span className='form__error'>{ error }</span> }\n    </>\n  );\n};\n\nCheckField.defaultProps = {\n  label: null,\n  value: false,\n  schema: null\n};\n\nCheckField.propTypes = {\n  /** Name and ID for the field. This will define what this is called in the output */\n  name: PropTypes.string.isRequired,\n  /** Label to show next to the checkbox */\n  label: PropTypes.string,\n  /** Field level schema, will be overriden if a schema is passed into the <Form /> */\n  schema: PropTypes.any,\n  /** Initial value to populate the check state */\n  value: PropTypes.bool\n};\n\nexport default CheckField;","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jamesbliss/Sites/@jamesbliss/bambino-form/.docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { bool } from 'yup';\nimport Form from '../../src/Form/Form';\nimport Check from '../../src/Check/Check';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"check\"\n    }}>{`Check`}</h1>\n    <p>{`This exported component is not expected to be your solution within a project but more an example of how to use the library.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Check} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<Form onSubmit={_ => _}>\\n  <Check name=\\\"have_hands\\\" label=\\\"Do you have hands?\\\" />\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      bool,\n      Form,\n      Check\n    }} mdxType=\"Playground\">\n  <Form onSubmit={_ => _} mdxType=\"Form\">\n    <Check name='have_hands' label='Do you have hands?' mdxType=\"Check\" />\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"inline-schema-usage\"\n    }}>{`Inline schema usage`}</h2>\n    <Playground __position={2} __code={'<Form onSubmit={_ => _}>\\n  <Check\\n    name=\\\"have_hands\\\"\\n    label=\\\"Do you have hands?\\\"\\n    schema={bool().oneOf([true], \\'Field must be checked\\')}\\n  />\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      bool,\n      Form,\n      Check\n    }} mdxType=\"Playground\">\n  <Form onSubmit={_ => _} mdxType=\"Form\">\n    <Check name='have_hands' label='Do you have hands?' schema={bool().oneOf([true], 'Field must be checked')} mdxType=\"Check\" />\n  </Form>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import Context from './Context';\n\nexport default Context;","import { createContext } from 'react';\n\nexport default createContext({\n  initialValues: {},\n  errors: {},\n  scopePath: '',\n  registerField: () => {},\n  unregisterField: () => {},\n  getFields: () => {},\n  handleSubmit: () => {},\n  handleFieldValidation: () => {}\n});","import React from 'react';\nimport dot from 'dot-object';\nimport { reach, object, mixed, array } from 'yup';\nimport PropTypes from 'prop-types';\nimport merge from 'deepmerge';\nimport { useDebouncedCallback } from 'use-debounce';\n\n// context\nimport FormContext from '../Context';\n\n// helper\nconst looptheloop = obj => {\n  const shape = {};\n\n  Object.keys(obj).forEach(key => {\n    if (obj[key] === undefined) return;\n    const keyType = obj[key].constructor.name;\n\n    if (keyType === 'Object') {\n      shape[key] = object().shape(looptheloop(obj[key]));\n    } else if (keyType === 'Array') {\n      const result = Object.keys(obj[key]).reduce(\n        (r, k) => ({ ...r, ...obj[key][k] }),\n        {}\n      );\n\n      shape[key] = array().of(object().shape(looptheloop({ ...result })));\n    } else {\n      shape[key] = obj[key];\n    }\n  });\n  return shape;\n};\n\n// exported\nconst Form = ({\n  initialValues,\n  children,\n  schema,\n  onSubmit,\n  fieldDebounced,\n  ...rest\n}) => {\n  const [fields, setFields] = React.useState([]);\n  const [errors, setErrors] = React.useState({});\n  const [initialData, setInitialData] = React.useState({});\n\n  React.useEffect(() => {\n    setInitialData(JSON.parse(JSON.stringify(initialValues)));\n  }, []);\n\n  function parseForm() {\n    const data = JSON.parse(JSON.stringify(initialValues));\n    const parsedDymanicSchema = {};\n\n    fields.forEach(({ name, ref, path, parseValue, dymanicSchema }) => {\n      const value = dot.pick(path, ref);\n\n      if (dymanicSchema) {\n        parsedDymanicSchema[name] = dymanicSchema;\n      } else {\n        parsedDymanicSchema[name] = mixed().notRequired();\n      }\n\n      data[name] = typeof parseValue === 'function' ? parseValue(value) : value;\n    });\n\n    dot.object(parsedDymanicSchema);\n    dot.object(data);\n\n    return {\n      data,\n      dymanicSchema: object().shape(looptheloop(parsedDymanicSchema))\n    };\n  }\n\n  function resetForm() {\n    fields.forEach(({ ref, path, clearValue }) => {\n      if (clearValue) {\n        return clearValue(ref);\n      }\n\n      return dot.set(path, '', ref);\n    });\n  }\n\n  async function handleDebouncedFieldValidation({ name, value }) {\n    const { data, dymanicSchema } = parseForm();\n\n    try {\n      const runSchema = schema || dymanicSchema;\n      if (runSchema) {\n        await reach(runSchema, name, data).validate(value);\n      }\n\n      const { [name]: remove, ...remaining } = errors;\n      setErrors(remaining);\n    } catch (err) {\n      const validationErrors = { ...errors };\n\n      if (err.message) {\n        validationErrors[name] = err.message;\n      }\n\n      setErrors(validationErrors);\n    }\n  }\n\n  // Debounce callback\n  const [handleFieldValidation] = useDebouncedCallback(\n    // function\n    ({ name, value }) => {\n      handleDebouncedFieldValidation({ name, value });\n    },\n    // delay in ms\n    fieldDebounced\n  );\n\n  async function handleValidation() {\n    const { data, dymanicSchema } = parseForm();\n    let castData = data;\n    let finalDataSet = {};\n\n    try {\n      const runSchema = schema || dymanicSchema;\n      if (runSchema) {\n        await runSchema.validate(data, {\n          abortEarly: false,\n          stripUnknown: true,\n          context: {}\n        });\n\n        castData = runSchema.cast(data, {\n          stripUnknown: true,\n          context: {}\n        });\n\n        finalDataSet = merge(initialData, castData, {\n          arrayMerge: (destinationArray, sourceArray) => {\n            return sourceArray.map((mapArray, index) => {\n              if (typeof mapArray === 'string') {\n                return destinationArray.push(mapArray);\n              }\n              return ({\n                ...destinationArray[index],\n                ...mapArray\n              });\n            });\n          }\n        });\n      }\n\n      setErrors({});\n\n      if (typeof onSubmit === 'function') {\n        onSubmit(finalDataSet, { resetForm });\n      }\n      return { errors: {}, data: finalDataSet, resetForm };\n    } catch (err) {\n      const validationErrors = {};\n\n      if (!err.inner) {\n        throw err;\n      }\n\n      err.inner.forEach((error) => {\n        validationErrors[error.path] = error.message;\n      });\n\n      setErrors(validationErrors);\n      return { errors: validationErrors, data: finalDataSet, resetForm };\n    }\n  }\n\n  async function handleSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    return handleValidation();\n  }\n\n  function registerField(field) {\n    setFields(state => [...state, field]);\n  }\n\n  function unregisterField(name) {\n    setFields(state => state.filter(field => field.name !== name));\n  }\n\n  return (\n    <FormContext.Provider\n      value={ {\n        initialValues,\n        errors,\n        scopePath: '',\n        registerField,\n        unregisterField,\n        getFields: parseForm,\n        handleFieldValidation,\n        handleResetForm: resetForm,\n        handleSubmit\n      } }\n    >\n      <form { ...rest } data-testid='form' onSubmit={ handleSubmit }>\n        { children }\n      </form>\n    </FormContext.Provider>\n  );\n};\n\n\nForm.defaultProps = {\n  initialValues: {},\n  schema: null,\n  fieldDebounced: 10\n};\n\nForm.propTypes = {\n  /** Initial values to populate the form */\n  initialValues: PropTypes.object,\n  /** Overall yup validation object. ❗️ Will override inline field level schema */\n  schema: PropTypes.object,\n  /** Any react childrent you would like 😁 */\n  children: PropTypes.any.isRequired,\n  /** Function which returns the data object and a resetForm function */\n  onSubmit: PropTypes.func.isRequired,\n  /** Debounces the handleFieldValidation function */\n  fieldDebounced: PropTypes.number\n};\n\nexport default Form;","import dot from 'dot-object';\nimport React from 'react';\n\n// context\nimport FormContext from '../Context';\n\n// exported component\nexport default function useField(name) {\n  const {\n    initialValues,\n    errors,\n    scopePath,\n    unregisterField,\n    registerField,\n    handleSubmit,\n    handleFieldValidation\n  } = React.useContext(FormContext);\n\n  let fieldName;\n  if (scopePath) {\n    if (typeof name === 'number') {\n      fieldName = `${ scopePath }[${ name }]`;\n    } else {\n      fieldName = `${ scopePath }.${ name }`;\n    }\n  } else {\n    fieldName = `${ name }`;\n  }\n\n  React.useEffect(() => () => unregisterField(fieldName), [fieldName, name]);\n\n  const defaultValue = dot.pick(fieldName, initialValues);\n  const error = errors[fieldName];\n\n  return {\n    fieldName,\n    handleSubmit,\n    handleFieldValidation,\n    registerField,\n    defaultValue,\n    error\n  };\n}","import useField from './useField';\n\nexport default useField;","import React from 'react';\n\n// hool\nimport useField from '../useField';\n\n// exported component\nconst useDefault = ({ name, ref, schema, value, parseValue = null, path = 'value' }) => {\n  const {\n    fieldName,\n    handleFieldValidation,\n    registerField,\n    defaultValue,\n    error\n  } = useField(name);\n\n  React.useEffect(() => {\n    if (ref.current) {\n      registerField({\n        name: fieldName,\n        ref: ref.current,\n        path,\n        parseValue,\n        dymanicSchema: schema\n      });\n    }\n  }, [ref.current, fieldName]);\n\n  const props = {\n    ref,\n    fieldName,\n    id: fieldName,\n    name: fieldName,\n    'aria-label': fieldName,\n    defaultValue: defaultValue || value,\n    error,\n    onChange: ({ target }) => handleFieldValidation({ name: target.name, value: target[path] }),\n    onBlur: ({ target }) => handleFieldValidation({ name: target.name, value: target[path] })\n  };\n\n  return props;\n};\n\nexport default useDefault;","import useDefault from './useDefault';\n\nexport default useDefault;"],"sourceRoot":""}