{"version":3,"sources":["webpack:///../src/Check/Check.js","webpack:///../src/Check/Check.docz.mdx"],"names":["InputField","_ref","name","label","schema","value","rest","_objectWithoutPropertiesLoose","ref","React","_useDefault","useDefault","path","error","fieldName","defaultValue","props","_objectSpread","type","Object","core_browser_esm","react_default","a","Fragment","_extends","id","htmlFor","Check","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","Check_docz_objectWithoutPropertiesLoose","index_es","Check_docz_extends","mdxType","index_esm","of","__position","__code","__scope","Playground","Props","bool","Form","onSubmit","_","placeholder","multiline","oneOf","isMDXComponent"],"mappings":"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","file":"component---src-check-check-docz-mdx-5c31e3c23307d535212e.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n// helper\nimport useDefault from '../useDefault';\n\n// exported component\nconst InputField = ({\n  name,\n  label,\n  schema,\n  value,\n  ...rest\n}) => {\n  const ref = React.useRef(null);\n\n  // custom behaviour and logic from useField\n  const {\n    error,\n    fieldName,\n    defaultValue,\n    ...bag\n  } = useDefault({\n    name,\n    ref,\n    schema,\n    value,\n    path: 'checked'\n  });\n\n  // props for check element\n  const props = {\n    ...rest,\n    ...bag,\n    type: 'checkbox',\n    defaultValue,\n    fieldName,\n    ref\n  };\n\n  return (\n    <>\n      <input id={ fieldName } { ...props } />\n\n      { label && <label htmlFor={ fieldName }>{ label }</label> }\n\n      { error && <span>{ error }</span> }\n    </>\n  );\n};\n\nInputField.defaultProps = {\n  label: null,\n  value: false,\n  schema: null\n};\n\nInputField.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  schema: PropTypes.any,\n  value: PropTypes.bool\n};\n\nexport default InputField;","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jamesbliss/Sites/@jamesbliss/bambino-form/.docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { bool } from 'yup';\nimport Form from '../../src/Form/Form';\nimport Check from '../../src/Check/Check';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"check\"\n    }}>{`Check`}</h1>\n    <p>{`This exported component is not expected to be your solution within a project but more an example of how to use the library.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Check} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<Form onSubmit={_ => _}>\\n  <Check\\n    name=\\\"first_name\\\"\\n    placeholder=\\\"Enter First Name\\\"\\n    label=\\\"First name\\\"\\n  />\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      bool,\n      Form,\n      Check\n    }} mdxType=\"Playground\">\n  <Form onSubmit={_ => _} mdxType=\"Form\">\n    <Check name='first_name' placeholder='Enter First Name' label='First name' mdxType=\"Check\" />\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"multiline-usage\"\n    }}>{`Multiline usage`}</h2>\n    <Playground __position={2} __code={'<Form onSubmit={_ => _}>\\n  <Check\\n    label=\\\"Description\\\"\\n    name=\\\"description\\\"\\n    placeholder=\\\"Enter Description\\\"\\n    multiline\\n  />\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      bool,\n      Form,\n      Check\n    }} mdxType=\"Playground\">\n  <Form onSubmit={_ => _} mdxType=\"Form\">\n    <Check label='Description' name='description' placeholder='Enter Description' multiline mdxType=\"Check\" />\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"inline-schema-usage\"\n    }}>{`Inline schema usage`}</h2>\n    <Playground __position={3} __code={'<Form onSubmit={_ => _}>\\n  <Check\\n    label=\\\"Last Name\\\"\\n    name=\\\"last_name\\\"\\n    placeholder=\\\"Enter Last Name\\\"\\n    schema={bool().oneOf([true], \\'Field must be checked\\')}\\n  />\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      bool,\n      Form,\n      Check\n    }} mdxType=\"Playground\">\n  <Form onSubmit={_ => _} mdxType=\"Form\">\n    <Check label='Last Name' name='last_name' placeholder='Enter Last Name' schema={bool().oneOf([true], 'Field must be checked')} mdxType=\"Check\" />\n  </Form>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}