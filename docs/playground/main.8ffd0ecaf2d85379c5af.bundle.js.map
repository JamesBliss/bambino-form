{"version":3,"file":"main.8ffd0ecaf2d85379c5af.bundle.js","sources":["webpack:///./__stories__/customTag.story.js"],"sourcesContent":["import React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { withInfo } from '@storybook/addon-info';\nimport marked from 'marked';\nimport { object, bool, string } from 'yup';\n\n// components //\nimport Form from '../src/Form';\nimport Scope from '../src/Scope';\nimport Context from '../src/Context';\nimport Input from '../src/Input';\nimport Select from '../src/Select';\nimport Check from '../src/Check';\n\n// helper\nimport FormWrapper from './_helper';\n\n// readme\nimport markdown from '../README.md';\n\nconst info = `\nBelow is the yup schema used.\n\n~~~js\nconst schema = object().shape({\n  name: string().required('Name is required'),\n  language: string().required('Language is required'),\n  alive: bool()\n});\n~~~\n`;\n\n// schema\nconst schema = object().shape({\n  name: string().required('Name is required'),\n  language: string().required('Language is required'),\n  alive: bool().oneOf([true], 'Field must be checked')\n});\n\n// story //\nstoriesOf('Form', module)\n\n  // decorators\n  .addDecorator(withInfo)\n  .addParameters({\n    options: { showAddonPanel: false },\n    notes: { markdown },\n    info: {\n      text: marked(info),\n      inline: true,\n      header: false,\n      source: false,\n      propTables: [Form, Scope, Input, Select, Check],\n      propTablesExclude: [FormWrapper]\n    }\n  })\n\n  // story\n  .add('Form: Custom tag', () => {\n    return (\n      <FormWrapper>\n        { ({ setFields }) => (\n          <Form\n            tagName='div'\n            schema={ schema }\n            onSubmit={ (data) => setFields(data) }\n          >\n            <Input\n              label='Name'\n              placeholder='Enter name'\n              name='name'\n            />\n            <br />\n            <Select\n              label='Language'\n              name='language'\n              placeholder='Please select...'\n              options={ [\n                { id: 'en', title: 'English' },\n                { id: 'it', title: 'Italian' }\n              ] }\n            />\n            <br />\n            <Check\n              label='Alive?'\n              name='alive'\n            />\n            <hr />\n            <Context.Consumer>\n              { ({ handleSubmit }) => (\n                <button onClick={ (e) => handleSubmit(e) }>Save</button>\n              ) }\n            </Context.Consumer>\n          </Form>\n        ) }\n      </FormWrapper>\n    );\n  });"],"mappings":"AAAA","sourceRoot":""}