{"version":3,"sources":["webpack:///../src/Input/Input.docz.mdx","webpack:///../src/Context/index.js","webpack:///../src/Context/Context.js","webpack:///../src/Form/Form.js","webpack:///../src/useField/useField.js","webpack:///../src/useField/index.js","webpack:///../src/useDefault/useDefault.js","webpack:///../src/useDefault/index.js","webpack:///../src/Input/Input.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","_extends","mdxType","id","docz__WEBPACK_IMPORTED_MODULE_9__","of","Input","__position","__code","__scope","Playground","Props","string","Form","_src_Form_Form__WEBPACK_IMPORTED_MODULE_11__","onSubmit","_","_src_Input_Input__WEBPACK_IMPORTED_MODULE_12__","name","placeholder","label","multiline","schema","required","isMDXComponent","__webpack_exports__","_Context__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","createContext","initialValues","errors","scopePath","registerField","unregisterField","handleSubmit","handleFieldValidation","looptheloop","obj","shape","key","undefined","keyType","object","result","keys","reduce","r","k","_objectSpread","array","children","fieldDebounced","rest","_React$useState","React","fields","setFields","_React$useState2","setErrors","_React$useState3","initialData","setInitialData","parseForm","data","JSON","parsedDymanicSchema","_ref2","ref","path","parseValue","dymanicSchema","value","dot","mixed","resetForm","_ref3","clearValue","_handleDebouncedFieldValidation","_asyncToGenerator","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_15___default","a","mark","_callee","_ref4","_parseForm","runSchema","remaining","validationErrors","wrap","_context","prev","next","reach","map","_toPropertyKey","t0","message","stop","apply","this","arguments","useDebouncedCallback","_ref5","_x","handleDebouncedFieldValidation","handleValidation","_handleValidation","_callee2","_parseForm2","castData","finalDataSet","_context2","validate","abortEarly","stripUnknown","context","cast","console","merge","arrayMerge","destinationArray","sourceArray","mapArray","index","abrupt","inner","forEach","error","_x2","_handleSubmit","_callee3","e","_context3","_emotion_core__WEBPACK_IMPORTED_MODULE_17__","_Context__WEBPACK_IMPORTED_MODULE_23__","Provider","field","state","concat","_toConsumableArray","filter","handleResetForm","data-testid","useField","fieldName","_React$useContext","Context","defaultValue","src_useField","useDefault","_ref$path","_useField","current","aria-label","onChange","target","onBlur","src_useDefault_useDefault","InputField","_useDefault","_emotion_core__WEBPACK_IMPORTED_MODULE_9__","react__WEBPACK_IMPORTED_MODULE_10___default","Fragment","className","htmlFor"],"mappings":"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","file":"component---src-input-input-docz-mdx-b133728e72f98d9bd82b.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jamesbliss/Sites/@jamesbliss/bambino-form/.docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { string } from 'yup';\nimport Form from '../../src/Form/Form';\nimport Input from '../../src/Input/Input';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"input\"\n    }}>{`Input`}</h1>\n    <p>{`This exported component is not expected to be your solution within a project but more an example of how to use the library.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Input} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<Form onSubmit={_ => _}>\\n  <Input\\n    name=\\\"first_name\\\"\\n    placeholder=\\\"Enter First Name\\\"\\n    label=\\\"First name\\\"\\n  />\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      string,\n      Form,\n      Input\n    }} mdxType=\"Playground\">\n  <Form onSubmit={_ => _} mdxType=\"Form\">\n    <Input name='first_name' placeholder='Enter First Name' label='First name' mdxType=\"Input\" />\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"multiline-usage\"\n    }}>{`Multiline usage`}</h2>\n    <Playground __position={2} __code={'<Form onSubmit={_ => _}>\\n  <Input\\n    label=\\\"Description\\\"\\n    name=\\\"description\\\"\\n    placeholder=\\\"Enter Description\\\"\\n    multiline\\n  />\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      string,\n      Form,\n      Input\n    }} mdxType=\"Playground\">\n  <Form onSubmit={_ => _} mdxType=\"Form\">\n    <Input label='Description' name='description' placeholder='Enter Description' multiline mdxType=\"Input\" />\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"inline-schema-usage\"\n    }}>{`Inline schema usage`}</h2>\n    <Playground __position={3} __code={'<Form onSubmit={_ => _}>\\n  <Input\\n    label=\\\"Last Name\\\"\\n    name=\\\"last_name\\\"\\n    placeholder=\\\"Enter Last Name\\\"\\n    schema={string().required(\\'Last name is required\\')}\\n  />\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      string,\n      Form,\n      Input\n    }} mdxType=\"Playground\">\n  <Form onSubmit={_ => _} mdxType=\"Form\">\n    <Input label='Last Name' name='last_name' placeholder='Enter Last Name' schema={string().required('Last name is required')} mdxType=\"Input\" />\n  </Form>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import Context from './Context';\n\nexport default Context;","import { createContext } from 'react';\n\nexport default createContext({\n  initialValues: {},\n  errors: {},\n  scopePath: '',\n  registerField: () => {},\n  unregisterField: () => {},\n  handleSubmit: () => {},\n  handleFieldValidation: () => {}\n});","import React from 'react';\nimport dot from 'dot-object';\nimport { reach, object, mixed, array } from 'yup';\nimport PropTypes from 'prop-types';\nimport merge from 'deepmerge';\nimport { useDebouncedCallback } from 'use-debounce';\n\n// context\nimport FormContext from '../Context';\n\n// helper\nconst looptheloop = obj => {\n  const shape = {};\n\n  Object.keys(obj).forEach(key => {\n    if (obj[key] === undefined) return;\n    const keyType = obj[key].constructor.name;\n\n    if (keyType === 'Object') {\n      shape[key] = object().shape(looptheloop(obj[key]));\n    } else if (keyType === 'Array') {\n      const result = Object.keys(obj[key]).reduce(\n        (r, k) => ({ ...r, ...obj[key][k] }),\n        {}\n      );\n\n      shape[key] = array().of(object().shape(looptheloop({ ...result })));\n    } else {\n      shape[key] = obj[key];\n    }\n  });\n  return shape;\n};\n\n// exported\nconst Form = ({\n  initialValues,\n  children,\n  schema,\n  onSubmit,\n  fieldDebounced,\n  ...rest\n}) => {\n  const [fields, setFields] = React.useState([]);\n  const [errors, setErrors] = React.useState({});\n  const [initialData, setInitialData] = React.useState({});\n\n  React.useEffect(() => {\n    setInitialData(JSON.parse(JSON.stringify(initialValues)));\n  }, []);\n\n  function parseForm() {\n    const data = JSON.parse(JSON.stringify(initialValues));\n    const parsedDymanicSchema = {};\n\n    fields.forEach(({ name, ref, path, parseValue, dymanicSchema }) => {\n      const value = dot.pick(path, ref);\n\n      if (dymanicSchema) {\n        parsedDymanicSchema[name] = dymanicSchema;\n      } else {\n        parsedDymanicSchema[name] = mixed().notRequired();\n      }\n\n      data[name] = parseValue ? parseValue(value) : value;\n    });\n\n    dot.object(parsedDymanicSchema);\n    dot.object(data);\n\n    return {\n      data,\n      dymanicSchema: object().shape(looptheloop(parsedDymanicSchema))\n    };\n  }\n\n  function resetForm() {\n    fields.forEach(({ ref, path, clearValue }) => {\n      if (clearValue) {\n        return clearValue(ref);\n      }\n\n      return dot.set(path, '', ref);\n    });\n  }\n\n  async function handleDebouncedFieldValidation({ name, value }) {\n    const { data, dymanicSchema } = parseForm();\n\n    try {\n      const runSchema = schema || dymanicSchema;\n      if (runSchema) {\n        await reach(runSchema, name, data).validate(value);\n      }\n\n      const { [name]: remove, ...remaining } = errors;\n      setErrors(remaining);\n    } catch (err) {\n      const validationErrors = { ...errors };\n\n      if (err.message) {\n        validationErrors[name] = err.message;\n      }\n\n      setErrors(validationErrors);\n    }\n  }\n\n  // Debounce callback\n  const [handleFieldValidation] = useDebouncedCallback(\n    // function\n    ({ name, value }) => {\n      handleDebouncedFieldValidation({ name, value });\n    },\n    // delay in ms\n    fieldDebounced\n  );\n\n  async function handleValidation() {\n    const { data, dymanicSchema } = parseForm();\n    let castData = data;\n    let finalDataSet = {};\n\n    try {\n      const runSchema = schema || dymanicSchema;\n      if (runSchema) {\n        await runSchema.validate(data, {\n          abortEarly: false,\n          stripUnknown: true,\n          context: {}\n        });\n\n        castData = runSchema.cast(data, {\n          stripUnknown: true,\n          context: {}\n        });\n\n        console.log({ initialData }, { castData });\n\n        finalDataSet = merge(initialData, castData, {\n          arrayMerge: (destinationArray, sourceArray) => {\n            // console.log(destinationArray, sourceArray);\n\n            return sourceArray.map((mapArray, index) => {\n              console.log({ mapArray }, { destinationArray });\n              // console.log(typeof mapArray);\n\n              if (typeof mapArray === 'string') {\n                return destinationArray.push(mapArray);\n              }\n\n              return ({\n                ...destinationArray[index],\n                ...mapArray\n              });\n            });\n          }\n        });\n\n        console.log({ finalDataSet });\n      }\n\n      setErrors({});\n\n      if (typeof onSubmit === 'function') {\n        onSubmit(finalDataSet, { resetForm });\n      }\n      return { errors: {}, data: finalDataSet, resetForm };\n    } catch (err) {\n      const validationErrors = {};\n\n      if (!err.inner) {\n        throw err;\n      }\n\n      err.inner.forEach((error) => {\n        validationErrors[error.path] = error.message;\n      });\n\n      setErrors(validationErrors);\n      return { errors: validationErrors, data: finalDataSet, resetForm };\n    }\n  }\n\n  async function handleSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    return handleValidation();\n  }\n\n  function registerField(field) {\n    setFields(state => [...state, field]);\n  }\n\n  function unregisterField(name) {\n    setFields(state => state.filter(field => field.name !== name));\n  }\n\n  return (\n    <FormContext.Provider\n      value={ {\n        initialValues,\n        errors,\n        scopePath: '',\n        registerField,\n        unregisterField,\n        handleFieldValidation,\n        handleResetForm: resetForm,\n        handleSubmit\n      } }\n    >\n      <form { ...rest } data-testid='form' onSubmit={ handleSubmit }>\n        { children }\n      </form>\n    </FormContext.Provider>\n  );\n};\n\n\nForm.defaultProps = {\n  initialValues: {},\n  schema: null,\n  fieldDebounced: 10\n};\n\nForm.propTypes = {\n  /** Initial values to populate the form */\n  initialValues: PropTypes.object,\n  /** Overall yup validation object. ❗️ Will override inline field level schema */\n  schema: PropTypes.object,\n  /** Any react childrent you would like 😁 */\n  children: PropTypes.any.isRequired,\n  /** Function which returns the data object and a resetForm function */\n  onSubmit: PropTypes.func.isRequired,\n  /** Debounces the handleFieldValidation function */\n  fieldDebounced: PropTypes.number\n};\n\nexport default Form;","import dot from 'dot-object';\nimport React from 'react';\n\n// context\nimport FormContext from '../Context';\n\n// exported component\nexport default function useField(name) {\n  const {\n    initialValues,\n    errors,\n    scopePath,\n    unregisterField,\n    registerField,\n    handleSubmit,\n    handleFieldValidation\n  } = React.useContext(FormContext);\n\n  let fieldName;\n  if (scopePath) {\n    if (typeof name === 'number') {\n      fieldName = `${ scopePath }[${ name }]`;\n    } else {\n      fieldName = `${ scopePath }.${ name }`;\n    }\n  } else {\n    fieldName = `${ name }`;\n  }\n\n  React.useEffect(() => () => unregisterField(fieldName), [fieldName, name]);\n\n  const defaultValue = dot.pick(fieldName, initialValues);\n  const error = errors[fieldName];\n\n  return {\n    fieldName,\n    handleSubmit,\n    handleFieldValidation,\n    registerField,\n    defaultValue,\n    error\n  };\n}","import useField from './useField';\n\nexport default useField;","import React from 'react';\n\n// hool\nimport useField from '../useField';\n\n// exported component\nconst useDefault = ({ name, ref, schema, value, path = 'value' }) => {\n  const {\n    fieldName,\n    handleFieldValidation,\n    registerField,\n    defaultValue,\n    error\n  } = useField(name);\n\n  React.useEffect(() => {\n    if (ref.current) {\n      registerField({\n        name: fieldName,\n        ref: ref.current,\n        path,\n        dymanicSchema: schema\n      });\n    }\n  }, [ref.current, fieldName]);\n\n  const props = {\n    ref,\n    fieldName,\n    id: fieldName,\n    name: fieldName,\n    'aria-label': fieldName,\n    defaultValue: defaultValue || value,\n    error,\n    onChange: ({ target }) => handleFieldValidation({ name: target.name, value: target[path] }),\n    onBlur: ({ target }) => handleFieldValidation({ name: target.name, value: target[path] })\n  };\n\n  return props;\n};\n\nexport default useDefault;","import useDefault from './useDefault';\n\nexport default useDefault;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// helper\nimport useDefault from '../useDefault';\n\n// exported component\nconst InputField = ({\n  name,\n  label,\n  multiline,\n  schema,\n  value,\n  ...rest\n}) => {\n  const ref = React.useRef(null);\n\n  // custom behaviour and logic from useField\n  const {\n    error,\n    fieldName,\n    defaultValue,\n    ...bag\n  } = useDefault({\n    name,\n    ref,\n    schema,\n    value\n  });\n\n  // props to be spread on input elemnt\n  const props = {\n    ...rest,\n    ...bag,\n    defaultValue,\n    fieldName,\n    ref\n  };\n\n  return (\n    <>\n      { label && <label className='form__label' htmlFor={ fieldName }>{ label }</label> }\n\n      { multiline ? (\n        <textarea className='form__textarea' { ...props } />\n      ) : (\n        <input className='form__input' { ...props } />\n      ) }\n\n      { error && <span className='form__error'>{ error }</span> }\n    </>\n  );\n};\n\nInputField.defaultProps = {\n  label: null,\n  placeholder: '',\n  multiline: false,\n  schema: null,\n  value: null\n};\n\nInputField.propTypes = {\n  /** Name and ID for the field. This will define what this is called in the output */\n  name: PropTypes.string.isRequired,\n  /** Label to show next to the checkbox */\n  label: PropTypes.string,\n  /** placeholder text */\n  placeholder: PropTypes.string,\n  /** <textarea /> or <input /> */\n  multiline: PropTypes.bool,\n  /** Field level schema, will be overriden if a schema is passed into the <Form /> */\n  schema: PropTypes.any,\n  /** Initial value to populate the check state */\n  value: PropTypes.PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nexport default InputField;"],"sourceRoot":""}