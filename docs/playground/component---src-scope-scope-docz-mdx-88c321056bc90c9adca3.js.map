{"version":3,"sources":["webpack:///../src/Scope/Scope.js","webpack:///../src/Scope/Scope.docz.mdx","webpack:///../src/Context/index.js","webpack:///../src/Context/Context.js","webpack:///../src/Form/Form.js","webpack:///../src/useField/useField.js","webpack:///../src/useField/index.js","webpack:///../src/useDefault/useDefault.js","webpack:///../src/useDefault/index.js","webpack:///../src/Input/Input.js"],"names":["Scope","_ref","path","children","_useContext","useContext","src_Context","scopePath","form","_objectWithoutPropertiesLoose","formattedPath","Object","core_browser_esm","Provider","value","_objectSpread","src_Scope_Scope","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","Scope_docz_objectWithoutPropertiesLoose","index_es","_extends","mdxType","id","parentName","index_esm","of","__position","__code","__scope","Playground","Props","object","string","Form","Context","Input","onSubmit","data","alert","JSON","stringify","name","placeholder","Consumer","_ref2","handleSubmit","onClick","e","_ref3","isMDXComponent","__webpack_exports__","_Context__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","createContext","initialValues","errors","registerField","unregisterField","handleFieldValidation","looptheloop","obj","shape","key","undefined","keyType","result","keys","reduce","r","k","array","schema","fieldDebounced","rest","_React$useState","React","fields","setFields","_React$useState2","setErrors","_React$useState3","initialData","setInitialData","parseForm","parsedDymanicSchema","ref","parseValue","dymanicSchema","dot","mixed","resetForm","clearValue","_handleDebouncedFieldValidation","_asyncToGenerator","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_15___default","a","mark","_callee","_ref4","_parseForm","runSchema","remaining","validationErrors","wrap","_context","prev","next","reach","map","_toPropertyKey","t0","message","stop","apply","this","arguments","useDebouncedCallback","_ref5","_x","handleDebouncedFieldValidation","handleValidation","_handleValidation","_callee2","_parseForm2","castData","finalDataSet","_context2","validate","abortEarly","stripUnknown","context","cast","console","merge","arrayMerge","destinationArray","sourceArray","mapArray","index","abrupt","inner","forEach","error","_x2","_handleSubmit","_callee3","_context3","_emotion_core__WEBPACK_IMPORTED_MODULE_17__","_Context__WEBPACK_IMPORTED_MODULE_23__","field","state","concat","_toConsumableArray","filter","handleResetForm","data-testid","useField","fieldName","_React$useContext","defaultValue","src_useField","useDefault","_ref$path","_useField","current","aria-label","onChange","target","onBlur","src_useDefault_useDefault","InputField","label","multiline","_useDefault","_emotion_core__WEBPACK_IMPORTED_MODULE_9__","react__WEBPACK_IMPORTED_MODULE_10___default","Fragment","className","htmlFor"],"mappings":"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","file":"component---src-scope-scope-docz-mdx-88c321056bc90c9adca3.js","sourcesContent":["\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport FormContext from '../Context';\n\nconst Scope = ({ path, children }) => {\n  const { scopePath, ...form } = useContext(FormContext);\n\n  // default to pure path\n  let formattedPath = path;\n  if (scopePath) {\n    // if number it should key differently to align with yup scheme.\n    formattedPath = (typeof path === 'number' ? `[${ path }]` : `.${ path }`);\n  }\n\n  // return new provider scroped to the new path\n  return (\n    <FormContext.Provider\n      value={ {\n        ...form,\n        scopePath: scopePath.concat(formattedPath)\n      } }\n    >\n      { children }\n    </FormContext.Provider>\n  );\n};\n\nScope.propTypes = {\n  /** New path of child elements to sit in. Number = ID in an arrya. String = key in object */\n  path: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ]).isRequired,\n  /** Inner components */\n  children: PropTypes.any.isRequired\n};\n\nexport default Scope;","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jamesbliss/Sites/@jamesbliss/bambino-form/.docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { object, string } from 'yup';\nimport Form from '../../src/Form/Form';\nimport Context from '../../src/Context/Context';\nimport Scope from '../../src/Scope/Scope';\nimport Input from '../../src/Input/Input';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"scope\"\n    }}>{`Scope`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<Scope />`}</inlineCode>{` component is a magical component which allows you to nest fields!`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Scope} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<Form onSubmit={data => alert(JSON.stringify(data, null, 2))}>\\n  <Input name=\\\"name\\\" placeholder=\\\"Name\\\" />\\n  <br />\\n  <Scope path=\\\"child\\\">\\n    <Input name=\\\"child_field\\\" placeholder=\\\"Child field\\\" />\\n  </Scope>\\n  <br />\\n  {/* This is required because docz doesn\\'t support form submission 🤦‍ */}\\n  <Context.Consumer>\\n    {({ handleSubmit }) => (\\n      <button onClick={e => handleSubmit(e)}>Submit name </button>\\n    )}\\n  </Context.Consumer>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      object,\n      string,\n      Form,\n      Context,\n      Scope,\n      Input\n    }} mdxType=\"Playground\">\n  <Form onSubmit={data => alert(JSON.stringify(data, null, 2))} mdxType=\"Form\">\n    <Input name='name' placeholder='Name' mdxType=\"Input\" />\n    <br />\n    <Scope path='child' mdxType=\"Scope\">\n      <Input name='child_field' placeholder='Child field' mdxType=\"Input\" />\n    </Scope>\n    <br />\n    {\n          /* This is required because docz doesn't support form submission 🤦‍ */\n        }\n    <Context.Consumer>\n      {({\n            handleSubmit\n          }) => <button onClick={e => handleSubmit(e)}>Submit name </button>}\n    </Context.Consumer>\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"usage-with-arrays\"\n    }}>{`Usage with arrays!`}</h2>\n    <Playground __position={2} __code={'<Form onSubmit={data => alert(JSON.stringify(data, null, 2))}>\\n  <Input name=\\\"name\\\" placeholder=\\\"Name\\\" />\\n  <br />\\n  <Scope path=\\\"child\\\">\\n    <Input name=\\\"child_field\\\" placeholder=\\\"Child field\\\" />\\n    <Scope path=\\\"child_array\\\">\\n      <Scope path={0}>\\n        <br />\\n        <Input name=\\\"child_array_field\\\" placeholder=\\\"Child array field\\\" />\\n      </Scope>\\n      <Scope path={1}>\\n        <br />\\n        <Input name=\\\"child_array_field\\\" placeholder=\\\"Child array field\\\" />\\n      </Scope>\\n    </Scope>\\n  </Scope>\\n  <br />\\n  {/* This is required because docz doesn\\'t support form submission 🤦‍ */}\\n  <Context.Consumer>\\n    {({ handleSubmit }) => (\\n      <button onClick={e => handleSubmit(e)}>Submit name </button>\\n    )}\\n  </Context.Consumer>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      object,\n      string,\n      Form,\n      Context,\n      Scope,\n      Input\n    }} mdxType=\"Playground\">\n  <Form onSubmit={data => alert(JSON.stringify(data, null, 2))} mdxType=\"Form\">\n    <Input name='name' placeholder='Name' mdxType=\"Input\" />\n    <br />\n    <Scope path='child' mdxType=\"Scope\">\n      <Input name='child_field' placeholder='Child field' mdxType=\"Input\" />\n      <Scope path='child_array' mdxType=\"Scope\">\n        <Scope path={0} mdxType=\"Scope\">\n          <br />\n          <Input name='child_array_field' placeholder='Child array field' mdxType=\"Input\" />\n        </Scope>\n        <Scope path={1} mdxType=\"Scope\">\n          <br />\n          <Input name='child_array_field' placeholder='Child array field' mdxType=\"Input\" />\n        </Scope>\n      </Scope>\n    </Scope>\n    <br />\n    {\n          /* This is required because docz doesn't support form submission 🤦‍ */\n        }\n    <Context.Consumer>\n      {({\n            handleSubmit\n          }) => <button onClick={e => handleSubmit(e)}>Submit name </button>}\n    </Context.Consumer>\n  </Form>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import Context from './Context';\n\nexport default Context;","import { createContext } from 'react';\n\nexport default createContext({\n  initialValues: {},\n  errors: {},\n  scopePath: '',\n  registerField: () => {},\n  unregisterField: () => {},\n  handleSubmit: () => {},\n  handleFieldValidation: () => {}\n});","import React from 'react';\nimport dot from 'dot-object';\nimport { reach, object, mixed, array } from 'yup';\nimport PropTypes from 'prop-types';\nimport merge from 'deepmerge';\nimport { useDebouncedCallback } from 'use-debounce';\n\n// context\nimport FormContext from '../Context';\n\n// helper\nconst looptheloop = obj => {\n  const shape = {};\n\n  Object.keys(obj).forEach(key => {\n    if (obj[key] === undefined) return;\n    const keyType = obj[key].constructor.name;\n\n    if (keyType === 'Object') {\n      shape[key] = object().shape(looptheloop(obj[key]));\n    } else if (keyType === 'Array') {\n      const result = Object.keys(obj[key]).reduce(\n        (r, k) => ({ ...r, ...obj[key][k] }),\n        {}\n      );\n\n      shape[key] = array().of(object().shape(looptheloop({ ...result })));\n    } else {\n      shape[key] = obj[key];\n    }\n  });\n  return shape;\n};\n\n// exported\nconst Form = ({\n  initialValues,\n  children,\n  schema,\n  onSubmit,\n  fieldDebounced,\n  ...rest\n}) => {\n  const [fields, setFields] = React.useState([]);\n  const [errors, setErrors] = React.useState({});\n  const [initialData, setInitialData] = React.useState({});\n\n  React.useEffect(() => {\n    setInitialData(JSON.parse(JSON.stringify(initialValues)));\n  }, []);\n\n  function parseForm() {\n    const data = JSON.parse(JSON.stringify(initialValues));\n    const parsedDymanicSchema = {};\n\n    fields.forEach(({ name, ref, path, parseValue, dymanicSchema }) => {\n      const value = dot.pick(path, ref);\n\n      if (dymanicSchema) {\n        parsedDymanicSchema[name] = dymanicSchema;\n      } else {\n        parsedDymanicSchema[name] = mixed().notRequired();\n      }\n\n      data[name] = parseValue ? parseValue(value) : value;\n    });\n\n    dot.object(parsedDymanicSchema);\n    dot.object(data);\n\n    return {\n      data,\n      dymanicSchema: object().shape(looptheloop(parsedDymanicSchema))\n    };\n  }\n\n  function resetForm() {\n    fields.forEach(({ ref, path, clearValue }) => {\n      if (clearValue) {\n        return clearValue(ref);\n      }\n\n      return dot.set(path, '', ref);\n    });\n  }\n\n  async function handleDebouncedFieldValidation({ name, value }) {\n    const { data, dymanicSchema } = parseForm();\n\n    try {\n      const runSchema = schema || dymanicSchema;\n      if (runSchema) {\n        await reach(runSchema, name, data).validate(value);\n      }\n\n      const { [name]: remove, ...remaining } = errors;\n      setErrors(remaining);\n    } catch (err) {\n      const validationErrors = { ...errors };\n\n      if (err.message) {\n        validationErrors[name] = err.message;\n      }\n\n      setErrors(validationErrors);\n    }\n  }\n\n  // Debounce callback\n  const [handleFieldValidation] = useDebouncedCallback(\n    // function\n    ({ name, value }) => {\n      handleDebouncedFieldValidation({ name, value });\n    },\n    // delay in ms\n    fieldDebounced\n  );\n\n  async function handleValidation() {\n    const { data, dymanicSchema } = parseForm();\n    let castData = data;\n    let finalDataSet = {};\n\n    try {\n      const runSchema = schema || dymanicSchema;\n      if (runSchema) {\n        await runSchema.validate(data, {\n          abortEarly: false,\n          stripUnknown: true,\n          context: {}\n        });\n\n        castData = runSchema.cast(data, {\n          stripUnknown: true,\n          context: {}\n        });\n\n        console.log({ initialData }, { castData });\n\n        finalDataSet = merge(initialData, castData, {\n          arrayMerge: (destinationArray, sourceArray) => {\n            // console.log(destinationArray, sourceArray);\n\n            return sourceArray.map((mapArray, index) => {\n              console.log({ mapArray }, { destinationArray });\n              // console.log(typeof mapArray);\n\n              if (typeof mapArray === 'string') {\n                return destinationArray.push(mapArray);\n              }\n\n              return ({\n                ...destinationArray[index],\n                ...mapArray\n              });\n            });\n          }\n        });\n\n        console.log({ finalDataSet });\n      }\n\n      setErrors({});\n\n      if (typeof onSubmit === 'function') {\n        onSubmit(finalDataSet, { resetForm });\n      }\n      return { errors: {}, data: finalDataSet, resetForm };\n    } catch (err) {\n      const validationErrors = {};\n\n      if (!err.inner) {\n        throw err;\n      }\n\n      err.inner.forEach((error) => {\n        validationErrors[error.path] = error.message;\n      });\n\n      setErrors(validationErrors);\n      return { errors: validationErrors, data: finalDataSet, resetForm };\n    }\n  }\n\n  async function handleSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    return handleValidation();\n  }\n\n  function registerField(field) {\n    setFields(state => [...state, field]);\n  }\n\n  function unregisterField(name) {\n    setFields(state => state.filter(field => field.name !== name));\n  }\n\n  return (\n    <FormContext.Provider\n      value={ {\n        initialValues,\n        errors,\n        scopePath: '',\n        registerField,\n        unregisterField,\n        handleFieldValidation,\n        handleResetForm: resetForm,\n        handleSubmit\n      } }\n    >\n      <form { ...rest } data-testid='form' onSubmit={ handleSubmit }>\n        { children }\n      </form>\n    </FormContext.Provider>\n  );\n};\n\n\nForm.defaultProps = {\n  initialValues: {},\n  schema: null,\n  fieldDebounced: 10\n};\n\nForm.propTypes = {\n  /** Initial values to populate the form */\n  initialValues: PropTypes.object,\n  /** Overall yup validation object. ❗️ Will override inline field level schema */\n  schema: PropTypes.object,\n  /** Any react childrent you would like 😁 */\n  children: PropTypes.any.isRequired,\n  /** Function which returns the data object and a resetForm function */\n  onSubmit: PropTypes.func.isRequired,\n  /** Debounces the handleFieldValidation function */\n  fieldDebounced: PropTypes.number\n};\n\nexport default Form;","import dot from 'dot-object';\nimport React from 'react';\n\n// context\nimport FormContext from '../Context';\n\n// exported component\nexport default function useField(name) {\n  const {\n    initialValues,\n    errors,\n    scopePath,\n    unregisterField,\n    registerField,\n    handleSubmit,\n    handleFieldValidation\n  } = React.useContext(FormContext);\n\n  let fieldName;\n  if (scopePath) {\n    if (typeof name === 'number') {\n      fieldName = `${ scopePath }[${ name }]`;\n    } else {\n      fieldName = `${ scopePath }.${ name }`;\n    }\n  } else {\n    fieldName = `${ name }`;\n  }\n\n  React.useEffect(() => () => unregisterField(fieldName), [fieldName, name]);\n\n  const defaultValue = dot.pick(fieldName, initialValues);\n  const error = errors[fieldName];\n\n  return {\n    fieldName,\n    handleSubmit,\n    handleFieldValidation,\n    registerField,\n    defaultValue,\n    error\n  };\n}","import useField from './useField';\n\nexport default useField;","import React from 'react';\n\n// hool\nimport useField from '../useField';\n\n// exported component\nconst useDefault = ({ name, ref, schema, value, path = 'value' }) => {\n  const {\n    fieldName,\n    handleFieldValidation,\n    registerField,\n    defaultValue,\n    error\n  } = useField(name);\n\n  React.useEffect(() => {\n    if (ref.current) {\n      registerField({\n        name: fieldName,\n        ref: ref.current,\n        path,\n        dymanicSchema: schema\n      });\n    }\n  }, [ref.current, fieldName]);\n\n  const props = {\n    ref,\n    fieldName,\n    id: fieldName,\n    name: fieldName,\n    'aria-label': fieldName,\n    defaultValue: defaultValue || value,\n    error,\n    onChange: ({ target }) => handleFieldValidation({ name: target.name, value: target[path] }),\n    onBlur: ({ target }) => handleFieldValidation({ name: target.name, value: target[path] })\n  };\n\n  return props;\n};\n\nexport default useDefault;","import useDefault from './useDefault';\n\nexport default useDefault;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// helper\nimport useDefault from '../useDefault';\n\n// exported component\nconst InputField = ({\n  name,\n  label,\n  multiline,\n  schema,\n  value,\n  ...rest\n}) => {\n  const ref = React.useRef(null);\n\n  // custom behaviour and logic from useField\n  const {\n    error,\n    fieldName,\n    defaultValue,\n    ...bag\n  } = useDefault({\n    name,\n    ref,\n    schema,\n    value\n  });\n\n  // props to be spread on input elemnt\n  const props = {\n    ...rest,\n    ...bag,\n    defaultValue,\n    fieldName,\n    ref\n  };\n\n  return (\n    <>\n      { label && <label className='form__label' htmlFor={ fieldName }>{ label }</label> }\n\n      { multiline ? (\n        <textarea className='form__textarea' { ...props } />\n      ) : (\n        <input className='form__input' { ...props } />\n      ) }\n\n      { error && <span className='form__error'>{ error }</span> }\n    </>\n  );\n};\n\nInputField.defaultProps = {\n  label: null,\n  placeholder: '',\n  multiline: false,\n  schema: null,\n  value: null\n};\n\nInputField.propTypes = {\n  /** Name and ID for the field. This will define what this is called in the output */\n  name: PropTypes.string.isRequired,\n  /** Label to show next to the checkbox */\n  label: PropTypes.string,\n  /** placeholder text */\n  placeholder: PropTypes.string,\n  /** <textarea /> or <input /> */\n  multiline: PropTypes.bool,\n  /** Field level schema, will be overriden if a schema is passed into the <Form /> */\n  schema: PropTypes.any,\n  /** Initial value to populate the check state */\n  value: PropTypes.PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nexport default InputField;"],"sourceRoot":""}